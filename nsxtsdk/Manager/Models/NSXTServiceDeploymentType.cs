// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTServiceDeploymentType : NSXTManagedResourceType
    {
        /// <summary>
        /// This indicates the deployment perimeter, such as a VC cluster or a host.
        /// </summary>
        [JsonProperty(PropertyName = "perimeter")]
        [NSXTProperty(IsRequired: false, Description: @"This indicates the deployment perimeter, such as a VC cluster or a host.")]
        [NSXTDefaultProperty(Default: "HOST")]
        public NSXTServiceDeploymentPerimeterEnumType? Perimeter { get; set; }
        /// <summary>
        /// Name of the deployment spec to be used for deployment, which specifies the OVF provided by the partner and the form
        /// factor.
        /// </summary>
        [JsonProperty(PropertyName = "deployment_spec_name", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Name of the deployment spec to be used for deployment, which specifies the OVF provided by the partner and the form factor.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string DeploymentSpecName { get; set; }
        /// <summary>
        /// Mode of deployment. Currently, only stand alone deployment is supported. It is a single VM deployed through this
        /// deployment spec. In future, HA configurations will be supported here.
        /// </summary>
        [JsonProperty(PropertyName = "deployment_mode")]
        [NSXTProperty(IsRequired: false, Description: @"Mode of deployment. Currently, only stand alone deployment is supported. It is a single VM deployed through this deployment spec. In future, HA configurations will be supported here.")]
        [NSXTDefaultProperty(Default: "STAND_ALONE")]
        public NSXTServiceDeploymentDeploymentModeEnumType? DeploymentMode { get; set; }
        /// <summary>
        /// The deployment template to be used during the deployment to provide customized attributes to the service VM.
        /// </summary>
        [JsonProperty(PropertyName = "instance_deployment_template", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The deployment template to be used during the deployment to provide customized attributes to the service VM.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTDeploymentTemplateType InstanceDeploymentTemplate { get; set; }
        /// <summary>
        /// Deployment Config contains the deployment specification, such as the storage and network to be used along with the
        /// cluster where the service VM can be deployed.
        /// </summary>
        [JsonProperty(PropertyName = "service_deployment_config", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Deployment Config contains the deployment specification, such as the storage and network to be used along with the cluster where the service VM can be deployed.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTServiceDeploymentConfigType ServiceDeploymentConfig { get; set; }
        /// <summary>
        /// The Service to which the service deployment is associated.
        /// </summary>
        [JsonProperty(PropertyName = "service_id")]
        [NSXTProperty(IsRequired: false, Description: @"The Service to which the service deployment is associated.")]
        public string? ServiceId { get; set; }
        /// <summary>
        /// Number of instances in case of clustered deployment.
        /// </summary>
        [JsonProperty(PropertyName = "clustered_deployment_count")]
        [NSXTProperty(IsRequired: false, Description: @"Number of instances in case of clustered deployment.")]
        //[System.ComponentModel.DataAnnotations.MinLength(1)]
        //[System.ComponentModel.DataAnnotations.MaxLength(10)]
        [NSXTDefaultProperty(Default: "")]
        public long? ClusteredDeploymentCount { get; set; }
        /// <summary>
        /// List of resource references where service instance be deployed. Ex. Tier 0 Logical Router in case of N-S
        /// ServiceInsertion. Service Attachment in case of E-W ServiceInsertion.
        /// </summary>
        [JsonProperty(PropertyName = "deployed_to")]
        [NSXTProperty(IsRequired: false, Description: @"List of resource references where service instance be deployed. Ex. Tier 0 Logical Router in case of N-S ServiceInsertion. Service Attachment in case of E-W ServiceInsertion.")]
        public IList<NSXTResourceReferenceType> DeployedTo { get; set; }
        /// <summary>
        /// Specifies whether the service VM should be deployed on each host such that it provides partner service locally on the
        /// host, or whether the service VMs can be deployed as a cluster. If deployment_type is CLUSTERED, then the
        /// clustered_deployment_count should be provided.
        /// </summary>
        [JsonProperty(PropertyName = "deployment_type")]
        [NSXTProperty(IsRequired: false, Description: @"Specifies whether the service VM should be deployed on each host such that it provides partner service locally on the host, or whether the service VMs can be deployed as a cluster. If deployment_type is CLUSTERED, then the clustered_deployment_count should be provided.")]
        [NSXTDefaultProperty(Default: "CLUSTERED")]
        public NSXTServiceDeploymentDeploymentTypeEnumType? DeploymentType { get; set; }
    }
}
