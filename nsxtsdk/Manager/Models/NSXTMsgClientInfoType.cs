// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// Information about a messaging client
    /// </summary>
    [NSXTProperty(Description: @"Information about a messaging client")]
    public class NSXTMsgClientInfoType 
    {
        /// <summary>
        /// Software version of the node.
        /// </summary>
        [JsonProperty(PropertyName = "software_version")]
        [NSXTProperty(IsRequired: false, Description: @"Software version of the node.")]
        public string? SoftwareVersion { get; set; }
        /// <summary>
        /// Account name for the messaging client. Identifies the client on the management plane message bus.
        /// </summary>
        [JsonProperty(PropertyName = "account_name")]
        [NSXTProperty(IsRequired: false, Description: @"Account name for the messaging client. Identifies the client on the management plane message bus.")]
        public string? AccountName { get; set; }
        /// <summary>
        /// Messaging client's certificate. Used to authenticate to the control plane messaging endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "certificate")]
        [NSXTProperty(IsRequired: false, Description: @"Messaging client&apos;s certificate. Used to authenticate to the control plane messaging endpoint.")]
        public string? Certificate { get; set; }
        /// <summary>
        /// Messaging client's secret. Used to authenticate to the management plane messaging broker.
        /// </summary>
        [JsonProperty(PropertyName = "shared_secret")]
        [NSXTProperty(IsRequired: false, Description: @"Messaging client&apos;s secret. Used to authenticate to the management plane messaging broker.")]
        public string? SharedSecret { get; set; }
    }
}
