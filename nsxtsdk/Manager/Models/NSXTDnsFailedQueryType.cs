// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// The summary of the failed DNS query. The query result represents a full
        /// query chain from client VM to dns forwarder, and upstream server if no
        /// forwarder cache was hit.
    /// </summary>
    [NSXTProperty(Description: @"The summary of the failed DNS query. The query result represents a fullquery chain from client VM to dns forwarder, and upstream server if noforwarder cache was hit.")]
    public class NSXTDnsFailedQueryType 
    {
        /// <summary>
        /// The time the query took before it got a failed answer, in ms.
        /// </summary>
        [JsonProperty(PropertyName = "time_spent")]
        [NSXTProperty(IsRequired: false, Description: @"The time the query took before it got a failed answer, in ms.")]
        public long? TimeSpent { get; set; }
        /// <summary>
        /// The record type be queried, e.g. A, CNAME, SOA, etc.
        /// </summary>
        [JsonProperty(PropertyName = "record_type")]
        [NSXTProperty(IsRequired: false, Description: @"The record type be queried, e.g. A, CNAME, SOA, etc.")]
        public string? RecordType { get; set; }
        /// <summary>
        /// The client host ip address from which the query was issued.
        /// </summary>
        [JsonProperty(PropertyName = "client_ip")]
        [NSXTProperty(IsRequired: false, Description: @"The client host ip address from which the query was issued.")]
        public string? ClientIp { get; set; }
        /// <summary>
        /// The upstream server ip address to which the query was forwarded. If the
        /// query could not be serviced from the DNS forwarder cache, this property
        /// will contain the IP address of the DNS server that serviced the request.
        /// If the request was serviced from the cache, this property will be absent.
        /// </summary>
        [JsonProperty(PropertyName = "upstream_server_ip")]
        [NSXTProperty(IsRequired: false, Description: @"The upstream server ip address to which the query was forwarded. If thequery could not be serviced from the DNS forwarder cache, this propertywill contain the IP address of the DNS server that serviced the request.If the request was serviced from the cache, this property will be absent.")]
        public string? UpstreamServerIp { get; set; }
        /// <summary>
        /// The detailed error message of the failed query, if any.
        /// </summary>
        [JsonProperty(PropertyName = "error_message")]
        [NSXTProperty(IsRequired: false, Description: @"The detailed error message of the failed query, if any.")]
        public string? ErrorMessage { get; set; }
        /// <summary>
        /// The address be queried, can be a FQDN or an ip address.
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        [NSXTProperty(IsRequired: false, Description: @"The address be queried, can be a FQDN or an ip address.")]
        public string? Address { get; set; }
        /// <summary>
        /// Timestamp of the request, in YYYY-MM-DD HH:MM:SS.zzz format.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Timestamp of the request, in YYYY-MM-DD HH:MM:SS.zzz format.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Timestamp { get; set; }
        /// <summary>
        /// The type of the query failure, e.g. NXDOMAIN, etc.
        /// </summary>
        [JsonProperty(PropertyName = "error_type")]
        [NSXTProperty(IsRequired: false, Description: @"The type of the query failure, e.g. NXDOMAIN, etc.")]
        public string? ErrorType { get; set; }
        /// <summary>
        /// The source ip address that is used to forward a query to an upstream
        /// server.
        /// </summary>
        [JsonProperty(PropertyName = "source_ip")]
        [NSXTProperty(IsRequired: false, Description: @"The source ip address that is used to forward a query to an upstreamserver.")]
        public string? SourceIp { get; set; }
        /// <summary>
        /// The DNS forwarder ip address to which the query was first received.
        /// </summary>
        [JsonProperty(PropertyName = "forwarder_ip")]
        [NSXTProperty(IsRequired: false, Description: @"The DNS forwarder ip address to which the query was first received.")]
        public string? ForwarderIp { get; set; }
    }
}
