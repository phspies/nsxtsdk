// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTAlarmType : NSXTManagedResourceType
    {
        /// <summary>
        /// Indicates when the corresponding Event instance was last reported in
        /// milliseconds since epoch.
        /// </summary>
        [JsonProperty(PropertyName = "last_reported_time")]
        [NSXTProperty(IsRequired: false, Description: @"Indicates when the corresponding Event instance was last reported inmilliseconds since epoch.")]
        public long? LastReportedTime { get; set; }
        /// <summary>
        /// Indicate the status which the Alarm is in.
        /// </summary>
        [JsonProperty(PropertyName = "status", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Indicate the status which the Alarm is in.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTAlarmStatusEnumType Status { get; set; }
        /// <summary>
        /// The entity that the Event instance applies to. Note entity_id may not
        /// be included in a response body. For example, the cpu_high Event may not
        /// return an entity_id.
        /// </summary>
        [JsonProperty(PropertyName = "entity_id")]
        [NSXTProperty(IsRequired: false, Description: @"The entity that the Event instance applies to. Note entity_id may notbe included in a response body. For example, the cpu_high Event may notreturn an entity_id.")]
        public string? EntityId { get; set; }
        /// <summary>
        /// Name of Event, e.g. manager_cpu_usage_high, certificate_expired.
        /// </summary>
        [JsonProperty(PropertyName = "event_type")]
        [NSXTProperty(IsRequired: false, Description: @"Name of Event, e.g. manager_cpu_usage_high, certificate_expired.")]
        public string? EventType { get; set; }
        /// <summary>
        /// Recommended action for Alarm. This is the same action as the
        /// corresponding Event identified by feature_name.event_type.
        /// </summary>
        [JsonProperty(PropertyName = "recommended_action")]
        [NSXTProperty(IsRequired: false, Description: @"Recommended action for Alarm. This is the same action as thecorresponding Event identified by feature_name.event_type.")]
        public string? RecommendedAction { get; set; }
        /// <summary>
        /// Severity of the Alarm.Can be one of - CRITICAL, HIGH, MEDIUM, LOW.
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        [NSXTProperty(IsRequired: false, Description: @"Severity of the Alarm.Can be one of - CRITICAL, HIGH, MEDIUM, LOW.")]
        public NSXTAlarmSeverityEnumType? Severity { get; set; }
        /// <summary>
        /// The UUID of the node that the Event instance applies to.
        /// </summary>
        [JsonProperty(PropertyName = "node_id")]
        [NSXTProperty(IsRequired: false, Description: @"The UUID of the node that the Event instance applies to.")]
        public string? NodeId { get; set; }
        /// <summary>
        /// Feature defining this Event, e.g. manager_health, certificates.
        /// </summary>
        [JsonProperty(PropertyName = "feature_name")]
        [NSXTProperty(IsRequired: false, Description: @"Feature defining this Event, e.g. manager_health, certificates.")]
        public string? FeatureName { get; set; }
        /// <summary>
        /// User ID of the user that set the status value to RESOLVED. This value
        /// can be SYSTEM to indicate that the system resolved the Alarm, for
        /// example when the system determines CPU usage is no longer high and the
        /// cpu_high Alarm is no longer applicable. This property is only returned
        /// when the status value is RESOLVED.
        /// </summary>
        [JsonProperty(PropertyName = "resolved_by")]
        [NSXTProperty(IsRequired: false, Description: @"User ID of the user that set the status value to RESOLVED. This valuecan be SYSTEM to indicate that the system resolved the Alarm, forexample when the system determines CPU usage is no longer high and thecpu_high Alarm is no longer applicable. This property is only returnedwhen the status value is RESOLVED.")]
        public string? ResolvedBy { get; set; }
        /// <summary>
        /// ID that uniquely identifies an Alarm.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        [NSXTProperty(IsRequired: false, Description: @"ID that uniquely identifies an Alarm.")]
        public string? Id { get; set; }
        /// <summary>
        /// Display name of Event type.
        /// </summary>
        [JsonProperty(PropertyName = "event_type_display_name")]
        [NSXTProperty(IsRequired: false, Description: @"Display name of Event type.")]
        public string? EventTypeDisplayName { get; set; }
        /// <summary>
        /// Display name of node that the event instance applies to.
        /// </summary>
        [JsonProperty(PropertyName = "node_display_name")]
        [NSXTProperty(IsRequired: false, Description: @"Display name of node that the event instance applies to.")]
        public string? NodeDisplayName { get; set; }
        /// <summary>
        /// Summary description of Alarm. This is the same summary description as the corresponding
        /// Event identified by feature_name.event_type.
        /// </summary>
        [JsonProperty(PropertyName = "summary")]
        [NSXTProperty(IsRequired: false, Description: @"Summary description of Alarm. This is the same summary description as the correspondingEvent identified by feature_name.event_type.")]
        public string? Summary { get; set; }
        /// <summary>
        /// Type of alarm source of the Event instance. Can be one of - INTENT_PATH, ENTITY_ID.
        /// </summary>
        [JsonProperty(PropertyName = "alarm_source_type")]
        [NSXTProperty(IsRequired: false, Description: @"Type of alarm source of the Event instance. Can be one of - INTENT_PATH, ENTITY_ID.")]
        public NSXTAlarmAlarmSourceTypeEnumType? AlarmSourceType { get; set; }
        /// <summary>
        /// Detailed description of Alarm. This is the same detailed description as the corresponding
        /// Event identified by feature_name.event_type.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        [NSXTProperty(IsRequired: false, Description: @"Detailed description of Alarm. This is the same detailed description as the correspondingEvent identified by feature_name.event_type.")]
        public string? Description { get; set; }
        /// <summary>
        /// The resource type of node that the Event instance applies to
        /// eg. ClusterNodeConfig, HostNode, EdgeNode.
        /// </summary>
        [JsonProperty(PropertyName = "node_resource_type")]
        [NSXTProperty(IsRequired: false, Description: @"The resource type of node that the Event instance applies toeg. ClusterNodeConfig, HostNode, EdgeNode.")]
        public string? NodeResourceType { get; set; }
        /// <summary>
        /// If alarm_source_type = INTENT_PATH, this field will contain a
        /// list of intent paths for the entity that the event instance applies to.
        /// If alarm_source_type = ENTITY_ID, this field will contain a list with
        /// a single item identifying the entity id that the event instance applies
        /// to.
        /// </summary>
        [JsonProperty(PropertyName = "alarm_source")]
        [NSXTProperty(IsRequired: false, Description: @"If alarm_source_type = INTENT_PATH, this field will contain alist of intent paths for the entity that the event instance applies to.If alarm_source_type = ENTITY_ID, this field will contain a list witha single item identifying the entity id that the event instance appliesto.")]
        public IList<string> AlarmSource { get; set; }
        /// <summary>
        /// Display name of feature defining this Event.
        /// </summary>
        [JsonProperty(PropertyName = "feature_display_name")]
        [NSXTProperty(IsRequired: false, Description: @"Display name of feature defining this Event.")]
        public string? FeatureDisplayName { get; set; }
        /// <summary>
        /// User ID of the user that set the status value to SUPPRESSED.
        /// This property is only returned when the status value is SUPPRESSED.
        /// </summary>
        [JsonProperty(PropertyName = "suppressed_by")]
        [NSXTProperty(IsRequired: false, Description: @"User ID of the user that set the status value to SUPPRESSED.This property is only returned when the status value is SUPPRESSED.")]
        public string? SuppressedBy { get; set; }
        /// <summary>
        /// Indicates when the Alarm was suppressed in milliseconds since epoch.
        /// This property is only returned when the status value is SUPPRESSED.
        /// </summary>
        [JsonProperty(PropertyName = "suppress_start_time")]
        [NSXTProperty(IsRequired: false, Description: @"Indicates when the Alarm was suppressed in milliseconds since epoch.This property is only returned when the status value is SUPPRESSED.")]
        public long? SuppressStartTime { get; set; }
        /// <summary>
        /// Indicates when the Alarm was resolved in milliseconds since epoch.
        /// This property is only returned when the status value is RESOLVED.
        /// </summary>
        [JsonProperty(PropertyName = "resolved_time")]
        [NSXTProperty(IsRequired: false, Description: @"Indicates when the Alarm was resolved in milliseconds since epoch.This property is only returned when the status value is RESOLVED.")]
        public long? ResolvedTime { get; set; }
        /// <summary>
        /// The entity type that the Event instance applies to.
        /// </summary>
        [JsonProperty(PropertyName = "entity_resource_type")]
        [NSXTProperty(IsRequired: false, Description: @"The entity type that the Event instance applies to.")]
        public string? EntityResourceType { get; set; }
        /// <summary>
        /// The time period between suppress_start_time and suppress_start_time +
        /// suppress_duration (specified in hours) an Alarm is SUPPRESSED.
        /// This property is only returned when the status value is SUPPRESSED.
        /// </summary>
        [JsonProperty(PropertyName = "suppress_duration")]
        [NSXTProperty(IsRequired: false, Description: @"The time period between suppress_start_time and suppress_start_time +suppress_duration (specified in hours) an Alarm is SUPPRESSED.This property is only returned when the status value is SUPPRESSED.")]
        public long? SuppressDuration { get; set; }
        /// <summary>
        /// IP addresses of node that the event instance applies to.
        /// </summary>
        [JsonProperty(PropertyName = "node_ip_addresses")]
        [NSXTProperty(IsRequired: false, Description: @"IP addresses of node that the event instance applies to.")]
        public IList<string> NodeIpAddresses { get; set; }
        /// <summary>
        /// The number of reoccurrences since this alarm has been SUPPRESSED.
        /// </summary>
        [JsonProperty(PropertyName = "reoccurrences_while_suppressed")]
        [NSXTProperty(IsRequired: false, Description: @"The number of reoccurrences since this alarm has been SUPPRESSED.")]
        public long? ReoccurrencesWhileSuppressed { get; set; }
    }
}
