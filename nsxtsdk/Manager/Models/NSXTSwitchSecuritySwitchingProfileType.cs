// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTSwitchSecuritySwitchingProfileType : NSXTBaseSwitchingProfileType
    {
        /// <summary>
        /// BPDU filtering is enabled by default. A pre-defined list of MAC addresses
        /// are automatically excluded from BPDU filtering.
        /// </summary>
        [JsonProperty(PropertyName = "bpdu_filter")]
        [NSXTProperty(IsRequired: false, Description: @"BPDU filtering is enabled by default. A pre-defined list of MAC addressesare automatically excluded from BPDU filtering.")]
        public NSXTBpduFilterType BpduFilter { get; set; }
        /// <summary>
        /// Rate limiting is disabled by default
        /// </summary>
        [JsonProperty(PropertyName = "rate_limits")]
        [NSXTProperty(IsRequired: false, Description: @"Rate limiting is disabled by default")]
        public NSXTRateLimitsType RateLimits { get; set; }
        /// <summary>
        /// RA Guard when enabled blocks unauthorized/rogue Router Advertisement (RA) packets.
        /// </summary>
        [JsonProperty(PropertyName = "ra_guard_enabled")]
        [NSXTProperty(IsRequired: false, Description: @"RA Guard when enabled blocks unauthorized/rogue Router Advertisement (RA) packets.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? RaGuardEnabled { get; set; }
        /// <summary>
        /// DHCP server blocking is enabled and client blocking is disabled by default
        /// </summary>
        [JsonProperty(PropertyName = "dhcp_filter")]
        [NSXTProperty(IsRequired: false, Description: @"DHCP server blocking is enabled and client blocking is disabled by default")]
        public NSXTDhcpFilterType DhcpFilter { get; set; }
        /// <summary>
        /// A flag to block all traffic except IP/(G)ARP/BPDU
        /// </summary>
        [JsonProperty(PropertyName = "block_non_ip_traffic")]
        [NSXTProperty(IsRequired: false, Description: @"A flag to block all traffic except IP/(G)ARP/BPDU")]
        public bool? BlockNonIpTraffic { get; set; }
    }
}
