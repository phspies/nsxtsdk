// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTFirewallSectionType : NSXTDSSectionType
    {
        public NSXTFirewallSectionType()
        {
        }
        /// <summary>
        /// Category from policy framework.
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        [NSXTProperty(IsRequired: false, Description: @"Category from policy framework.")]
        public string? Category { get; set; }
        /// <summary>
        /// This attribute represents enforcement point of firewall section. For example, firewall section enforced on logical port
        /// with attachment type bridge endpoint will have 'BRIDGEENDPOINT' value, firewall section enforced on logical router will
        /// have 'LOGICALROUTER' value and rest have 'VIF' value.
        /// </summary>
        [JsonProperty(PropertyName = "enforced_on")]
        [NSXTProperty(IsRequired: false, Description: @"This attribute represents enforcement point of firewall section. For example, firewall section enforced on logical port with attachment type bridge endpoint will have &apos;BRIDGEENDPOINT&apos; value, firewall section enforced on logical router will have &apos;LOGICALROUTER&apos; value and rest have &apos;VIF&apos; value.")]
        public string? EnforcedOn { get; set; }
        /// <summary>
        /// Section is locked/unlocked.
        /// </summary>
        [JsonProperty(PropertyName = "locked")]
        [NSXTProperty(IsRequired: false, Description: @"Section is locked/unlocked.")]
        public bool? Locked { get; set; }
        /// <summary>
        /// If TCP strict is enabled on a section and a packet matches rule in it, the following check will be performed. If the
        /// packet does not belong to an existing session, the kernel will check to see if the SYN flag of the packet is set. If it
        /// is not, then it will drop the packet.
        /// </summary>
        [JsonProperty(PropertyName = "tcp_strict")]
        [NSXTProperty(IsRequired: false, Description: @"If TCP strict is enabled on a section and a packet matches rule in it, the following check will be performed. If the packet does not belong to an existing session, the kernel will check to see if the SYN flag of the packet is set. If it is not, then it will drop the packet.")]
        public bool? TcpStrict { get; set; }
        /// <summary>
        /// ID of the user who last modified the lock for the section.
        /// </summary>
        [JsonProperty(PropertyName = "lock_modified_by")]
        [NSXTProperty(IsRequired: false, Description: @"ID of the user who last modified the lock for the section.")]
        public string? LockModifiedBy { get; set; }
        /// <summary>
        /// Section locked/unlocked time in epoch milliseconds.
        /// </summary>
        [JsonProperty(PropertyName = "lock_modified_time")]
        [NSXTProperty(IsRequired: false, Description: @"Section locked/unlocked time in epoch milliseconds.")]
        public long? LockModifiedTime { get; set; }
        /// <summary>
        /// Priority of current section with respect to other sections. In case the field is empty, the list section api should be
        /// used to get section priority.
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        [NSXTProperty(IsRequired: false, Description: @"Priority of current section with respect to other sections. In case the field is empty, the list section api should be used to get section priority.")]
        public long? Priority { get; set; }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "firewall_schedule")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTResourceReferenceType FirewallSchedule { get; set; }
        /// <summary>
        /// Comments for section lock/unlock.
        /// </summary>
        [JsonProperty(PropertyName = "comments")]
        [NSXTProperty(IsRequired: false, Description: @"Comments for section lock/unlock.")]
        public string? Comments { get; set; }
        /// <summary>
        /// This flag indicates whether it is an auto-plumbed section that is associated to a LogicalRouter. Auto-plumbed sections
        /// are system owned and cannot be updated via the API.
        /// </summary>
        [JsonProperty(PropertyName = "autoplumbed")]
        [NSXTProperty(IsRequired: false, Description: @"This flag indicates whether it is an auto-plumbed section that is associated to a LogicalRouter. Auto-plumbed sections are system owned and cannot be updated via the API.")]
        public bool? Autoplumbed { get; set; }
    }
}
