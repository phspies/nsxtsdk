// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTIPSecVPNServiceType : NSXTManagedResourceType
    {
        /// <summary>
        /// Log level for internet key exchange (IKE).
        /// </summary>
        [JsonProperty(PropertyName = "ike_log_level")]
        [NSXTProperty(IsRequired: false, Description: @"Log level for internet key exchange (IKE).")]
        [NSXTDefaultProperty(Default: "INFO")]
        public NSXTIpsecVpnserviceIkeLogLevelEnumType? IkeLogLevel { get; set; }
        /// <summary>
        /// Logical router id.
        /// </summary>
        [JsonProperty(PropertyName = "logical_router_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Logical router id.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string LogicalRouterId { get; set; }
        /// <summary>
        /// Enable/disable IPSec HA state sync. IPSec HA state sync
        /// can be disabled in case there are performance issues with
        /// the state sync messages. Default is to enable HA Sync.
        /// </summary>
        [JsonProperty(PropertyName = "ipsec_ha_sync")]
        [NSXTProperty(IsRequired: false, Description: @"Enable/disable IPSec HA state sync. IPSec HA state synccan be disabled in case there are performance issues withthe state sync messages. Default is to enable HA Sync.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? IpsecHaSync { get; set; }
        /// <summary>
        /// Bypass policy rules are configured using VPN service.
        /// Bypass rules always have higher priority over protect
        /// rules and they affect all policy based vpn sessions associated
        /// with the IPSec VPN service. Protect rules are defined per
        /// policy based vpn session.
        /// </summary>
        [JsonProperty(PropertyName = "bypass_rules")]
        [NSXTProperty(IsRequired: false, Description: @"Bypass policy rules are configured using VPN service.Bypass rules always have higher priority over protectrules and they affect all policy based vpn sessions associatedwith the IPSec VPN service. Protect rules are defined perpolicy based vpn session.")]
        public IList<NSXTIPSecVPNPolicyRuleType> BypassRules { get; set; }
        /// <summary>
        /// If true, enable VPN services for given logical router.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        [NSXTProperty(IsRequired: false, Description: @"If true, enable VPN services for given logical router.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? Enabled { get; set; }
    }
}
