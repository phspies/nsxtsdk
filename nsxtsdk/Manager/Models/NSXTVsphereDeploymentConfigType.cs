// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTVsphereDeploymentConfigType : NSXTDeploymentConfigType
    {
        /// <summary>
        /// List of distributed portgroup or VLAN logical identifiers to which the
        /// datapath serving vnics of edge node vm will be connected.
        /// </summary>
        [JsonProperty(PropertyName = "data_network_ids", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"List of distributed portgroup or VLAN logical identifiers to which thedatapath serving vnics of edge node vm will be connected.")]
        [System.ComponentModel.DataAnnotations.Required]
        public IList<string> DataNetworkIds { get; set; }
        /// <summary>
        /// Allocation for memory and CPU resources.
        /// </summary>
        [JsonProperty(PropertyName = "resource_allocation")]
        [NSXTProperty(IsRequired: false, Description: @"Allocation for memory and CPU resources.")]
        public NSXTResourceAssignmentType ResourceAllocation { get; set; }
        /// <summary>
        /// List of DNS servers.
        /// This field is deprecated. Use dns_servers property in EdgeNodeSettings
        /// section when creating or updating transport nodes.
        /// </summary>
        [JsonProperty(PropertyName = "dns_servers")]
        [NSXTProperty(IsRequired: false, Description: @"List of DNS servers.This field is deprecated. Use dns_servers property in EdgeNodeSettingssection when creating or updating transport nodes.")]
        public IList<string> DnsServers { get; set; }
        /// <summary>
        /// The edge node vm will be deployed on the specified compute folder created in a datacenter,
        /// if compute folder is specified.
        /// Note - User must ensure that compute folder is accessible by specified cluster/host.
        /// </summary>
        [JsonProperty(PropertyName = "compute_folder_id")]
        [NSXTProperty(IsRequired: false, Description: @"The edge node vm will be deployed on the specified compute folder created in a datacenter,if compute folder is specified.Note - User must ensure that compute folder is accessible by specified cluster/host.")]
        public string? ComputeFolderId { get; set; }
        /// <summary>
        /// List of domain names that are used to complete unqualified host names.
        /// This field is deprecated. Use search_domains property in EdgeNodeSettings
        /// section when creating or updating transport nodes.
        /// </summary>
        [JsonProperty(PropertyName = "search_domains")]
        [NSXTProperty(IsRequired: false, Description: @"List of domain names that are used to complete unqualified host names.This field is deprecated. Use search_domains property in EdgeNodeSettingssection when creating or updating transport nodes.")]
        public IList<string> SearchDomains { get; set; }
        /// <summary>
        /// Host name or FQDN for edge node.
        /// </summary>
        [JsonProperty(PropertyName = "hostname")]
        [NSXTProperty(IsRequired: false, Description: @"Host name or FQDN for edge node.")]
        public string? Hostname { get; set; }
        /// <summary>
        /// Enabling SSH service is not recommended for security reasons.
        /// This field is deprecated. Use enable_ssh property in EdgeNodeSettings
        /// section when creating or updating transport nodes.
        /// </summary>
        [JsonProperty(PropertyName = "enable_ssh")]
        [NSXTProperty(IsRequired: false, Description: @"Enabling SSH service is not recommended for security reasons.This field is deprecated. Use enable_ssh property in EdgeNodeSettingssection when creating or updating transport nodes.")]
        public bool? EnableSsh { get; set; }
        /// <summary>
        /// Allowing root SSH logins is not recommended for security reasons.
        /// This field is deprecated. Use allow_ssh_root_login property in EdgeNodeSettings
        /// section when creating transport nodes.
        /// </summary>
        [JsonProperty(PropertyName = "allow_ssh_root_login")]
        [NSXTProperty(IsRequired: false, Description: @"Allowing root SSH logins is not recommended for security reasons.This field is deprecated. Use allow_ssh_root_login property in EdgeNodeSettingssection when creating transport nodes.")]
        public bool? AllowSshRootLogin { get; set; }
        /// <summary>
        /// The edge node vm will be deployed on the specified cluster or resourcepool.
        /// Note - all the hosts must have nsx fabric prepared in the specified cluster.
        /// </summary>
        [JsonProperty(PropertyName = "compute_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The edge node vm will be deployed on the specified cluster or resourcepool.Note - all the hosts must have nsx fabric prepared in the specified cluster.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string ComputeId { get; set; }
        /// <summary>
        /// List of NTP servers.
        /// This field is deprecated. Use ntp_servers property in EdgeNodeSettings
        /// section when creating or updating transport nodes.
        /// </summary>
        [JsonProperty(PropertyName = "ntp_servers")]
        [NSXTProperty(IsRequired: false, Description: @"List of NTP servers.This field is deprecated. Use ntp_servers property in EdgeNodeSettingssection when creating or updating transport nodes.")]
        public IList<string> NtpServers { get; set; }
        /// <summary>
        /// Resource reservation for memory and CPU resources.
        /// </summary>
        [JsonProperty(PropertyName = "reservation_info")]
        [NSXTProperty(IsRequired: false, Description: @"Resource reservation for memory and CPU resources.")]
        public NSXTReservationInfoType ReservationInfo { get; set; }
        /// <summary>
        /// The vc specific identifiers will be resolved on this VC.
        /// So all other identifiers specified here must belong to this vcenter server.
        /// </summary>
        [JsonProperty(PropertyName = "vc_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The vc specific identifiers will be resolved on this VC.So all other identifiers specified here must belong to this vcenter server.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string VcId { get; set; }
        /// <summary>
        /// The edge node vm will be deployed on the specified datastore. User must ensure
        /// that storage is accessible by the specified cluster/host.
        /// </summary>
        [JsonProperty(PropertyName = "storage_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The edge node vm will be deployed on the specified datastore. User must ensurethat storage is accessible by the specified cluster/host.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string StorageId { get; set; }
        /// <summary>
        /// The default gateway for edge node must be specified if all the nodes it
        /// communicates with are not in the same subnet.
        /// Note: Only single IPv4 default gateway address is supported and it must
        /// belong to management network.
        /// </summary>
        [JsonProperty(PropertyName = "default_gateway_addresses")]
        [NSXTProperty(IsRequired: false, Description: @"The default gateway for edge node must be specified if all the nodes itcommunicates with are not in the same subnet.Note: Only single IPv4 default gateway address is supported and it mustbelong to management network.")]
        public IList<string> DefaultGatewayAddresses { get; set; }
        /// <summary>
        /// IP Address and subnet configuration for the management port. Note:
        /// only one IPv4 address is supported for the management port.
        /// </summary>
        [JsonProperty(PropertyName = "management_port_subnets")]
        [NSXTProperty(IsRequired: false, Description: @"IP Address and subnet configuration for the management port. Note:only one IPv4 address is supported for the management port.")]
        public IList<NSXTIPSubnetType> ManagementPortSubnets { get; set; }
        /// <summary>
        /// The edge node vm will be deployed on the specified Host within the cluster
        /// if host_id is specified.
        /// Note - User must ensure that storage and specified networks are accessible by this host.
        /// </summary>
        [JsonProperty(PropertyName = "host_id")]
        [NSXTProperty(IsRequired: false, Description: @"The edge node vm will be deployed on the specified Host within the clusterif host_id is specified.Note - User must ensure that storage and specified networks are accessible by this host.")]
        public string? HostId { get; set; }
        /// <summary>
        /// Array of additional specific properties for advanced or cloud-
        /// specific deployments in key-value format.
        /// </summary>
        [JsonProperty(PropertyName = "advanced_configuration")]
        [NSXTProperty(IsRequired: false, Description: @"Array of additional specific properties for advanced or cloud-specific deployments in key-value format.")]
        public IList<NSXTKeyValuePairType> AdvancedConfiguration { get; set; }
        /// <summary>
        /// Distributed portgroup identifier to which the management vnic of edge node vm
        /// will be connected. This portgroup must have connectivity with MP and CCP. A
        /// VLAN logical switch identifier may also be specified.
        /// </summary>
        [JsonProperty(PropertyName = "management_network_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Distributed portgroup identifier to which the management vnic of edge node vmwill be connected. This portgroup must have connectivity with MP and CCP. AVLAN logical switch identifier may also be specified.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string ManagementNetworkId { get; set; }
    }
}
