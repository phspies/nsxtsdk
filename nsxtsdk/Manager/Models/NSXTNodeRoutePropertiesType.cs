// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTNodeRoutePropertiesType : NSXTResourceType
    {
        /// <summary>
        /// Source address to prefer when sending to destinations of route
        /// </summary>
        [JsonProperty(PropertyName = "src")]
        [NSXTProperty(IsRequired: false, Description: @"Source address to prefer when sending to destinations of route")]
        public string? Src { get; set; }
        /// <summary>
        /// From address
        /// </summary>
        [JsonProperty(PropertyName = "from_address")]
        [NSXTProperty(IsRequired: false, Description: @"From address")]
        public string? FromAddress { get; set; }
        /// <summary>
        /// Routing protocol identifier of route
        /// </summary>
        [JsonProperty(PropertyName = "proto")]
        [NSXTProperty(IsRequired: false, Description: @"Routing protocol identifier of route")]
        [NSXTDefaultProperty(Default: "boot")]
        public NSXTNodeRoutePropertiesProtoEnumType? Proto { get; set; }
        /// <summary>
        /// Route type
        /// </summary>
        [JsonProperty(PropertyName = "route_type", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Route type")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTNodeRoutePropertiesRouteTypeEnumType RouteType { get; set; }
        /// <summary>
        /// Metric value of route
        /// </summary>
        [JsonProperty(PropertyName = "metric")]
        [NSXTProperty(IsRequired: false, Description: @"Metric value of route")]
        public string? Metric { get; set; }
        /// <summary>
        /// Destination covered by route
        /// </summary>
        [JsonProperty(PropertyName = "destination")]
        [NSXTProperty(IsRequired: false, Description: @"Destination covered by route")]
        public string? Destination { get; set; }
        /// <summary>
        /// Network interface id of route
        /// </summary>
        [JsonProperty(PropertyName = "interface_id")]
        [NSXTProperty(IsRequired: false, Description: @"Network interface id of route")]
        public string? InterfaceId { get; set; }
        /// <summary>
        /// Unique identifier for the route
        /// </summary>
        [JsonProperty(PropertyName = "route_id")]
        [NSXTProperty(IsRequired: false, Description: @"Unique identifier for the route")]
        public string? RouteId { get; set; }
        /// <summary>
        /// Netmask of destination covered by route
        /// </summary>
        [JsonProperty(PropertyName = "netmask")]
        [NSXTProperty(IsRequired: false, Description: @"Netmask of destination covered by route")]
        public string? Netmask { get; set; }
        /// <summary>
        /// Scope of destinations covered by route
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        [NSXTProperty(IsRequired: false, Description: @"Scope of destinations covered by route")]
        public string? Scope { get; set; }
        /// <summary>
        /// Address of next hop
        /// </summary>
        [JsonProperty(PropertyName = "gateway")]
        [NSXTProperty(IsRequired: false, Description: @"Address of next hop")]
        public string? Gateway { get; set; }
    }
}
