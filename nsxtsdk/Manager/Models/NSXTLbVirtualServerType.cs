// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTLbVirtualServerType : NSXTManagedResourceType
    {
        public NSXTLbVirtualServerType()
        {
            IpProtocol = test
            Enabled = test
        }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "access_list_control")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTLbAccessListControlType AccessListControl { get; set; }
        /// <summary>
        /// Assigned Internet Protocol in IP header, TCP, UDP are supported.
        /// </summary>
        [JsonProperty(PropertyName = "ip_protocol")]
        [NSXTProperty(IsRequired: false, Description: @"Assigned Internet Protocol in IP header, TCP, UDP are supported.")]
        public NSXTLbVirtualServerIpProtocolEnumType? IpProtocol { get; set; }
        /// <summary>
        /// The property log_significant_event_only can take effect only when
        /// access_log_enabled is true. If log_significant_event_only is true,
        /// significant events are logged in access log.
        /// For L4 virtual server, significant event means unsuccessful(error or
        /// dropped) TCP/UDP connections.
        /// For L7 virtual server, significant event means unsuccessful connections
        /// or HTTP/HTTPS requests which have error response code(e.g. 4xx, 5xx).
        /// </summary>
        [JsonProperty(PropertyName = "log_significant_event_only")]
        [NSXTProperty(IsRequired: false, Description: @"The property log_significant_event_only can take effect only whenaccess_log_enabled is true. If log_significant_event_only is true,significant events are logged in access log.For L4 virtual server, significant event means unsuccessful(error ordropped) TCP/UDP connections.For L7 virtual server, significant event means unsuccessful connectionsor HTTP/HTTPS requests which have error response code(e.g. 4xx, 5xx).")]
        public bool? LogSignificantEventOnly { get; set; }
        /// <summary>
        /// If default_pool_member_ports are configured, both
        /// default_pool_member_port and default_pool_member_ports in the response
        /// payload would include port settings, notice that the value of
        /// default_pool_member_port is the first element of
        /// default_pool_member_ports.
        /// </summary>
        [JsonProperty(PropertyName = "default_pool_member_ports")]
        [NSXTProperty(IsRequired: false, Description: @"If default_pool_member_ports are configured, bothdefault_pool_member_port and default_pool_member_ports in the responsepayload would include port settings, notice that the value ofdefault_pool_member_port is the first element ofdefault_pool_member_ports.")]
        public IList<string> DefaultPoolMemberPorts { get; set; }
        /// <summary>
        /// Persistence profile is used to allow related client connections to be
        /// sent to the same backend server.
        /// </summary>
        [JsonProperty(PropertyName = "persistence_profile_id")]
        [NSXTProperty(IsRequired: false, Description: @"Persistence profile is used to allow related client connections to besent to the same backend server.")]
        public string? PersistenceProfileId { get; set; }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "server_ssl_profile_binding")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTServerSslProfileBindingType ServerSslProfileBinding { get; set; }
        /// <summary>
        /// The application profile defines the application protocol characteristics.
        /// It is used to influence how load balancing is performed. Currently,
        /// LbFastTCPProfile, LbFastUDPProfile and
        /// LbHttpProfile, etc are supported.
        /// </summary>
        [JsonProperty(PropertyName = "application_profile_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The application profile defines the application protocol characteristics.It is used to influence how load balancing is performed. Currently,LbFastTCPProfile, LbFastUDPProfile andLbHttpProfile, etc are supported.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string ApplicationProfileId { get; set; }
        /// <summary>
        /// The server pool(LbPool) contains backend servers. Server pool
        /// consists of one or more servers, also referred to as pool members, that
        /// are similarly configured and are running the same application.
        /// </summary>
        [JsonProperty(PropertyName = "pool_id")]
        [NSXTProperty(IsRequired: false, Description: @"The server pool(LbPool) contains backend servers. Server poolconsists of one or more servers, also referred to as pool members, thatare similarly configured and are running the same application.")]
        public string? PoolId { get; set; }
        /// <summary>
        /// Whether access log is enabled
        /// </summary>
        [JsonProperty(PropertyName = "access_log_enabled")]
        [NSXTProperty(IsRequired: false, Description: @"Whether access log is enabled")]
        public bool? AccessLogEnabled { get; set; }
        /// <summary>
        /// To ensure one virtual server does not over consume resources,
        /// affecting other applications hosted on the same LBS, connections
        /// to a virtual server can be capped.
        /// If it is not specified, it means that connections are unlimited.
        /// The property is deprecated as NSX-T Load Balancer is deprecated.
        /// </summary>
        [JsonProperty(PropertyName = "max_concurrent_connections")]
        [NSXTProperty(IsRequired: false, Description: @"To ensure one virtual server does not over consume resources,affecting other applications hosted on the same LBS, connectionsto a virtual server can be capped.If it is not specified, it means that connections are unlimited.The property is deprecated as NSX-T Load Balancer is deprecated.")]
        //[System.ComponentModel.DataAnnotations.MinLength(1)]
        //[System.ComponentModel.DataAnnotations.MaxLength(2147483647)]
        public long? MaxConcurrentConnections { get; set; }
        /// <summary>
        /// Load balancer rules allow customization of load balancing behavior using
        /// match/action rules. Currently, load balancer rules are supported for
        /// only layer 7 virtual servers with LbHttpProfile.
        /// The property is deprecated as NSX-T Load Balancer is deprecated.
        /// </summary>
        [JsonProperty(PropertyName = "rule_ids")]
        [NSXTProperty(IsRequired: false, Description: @"Load balancer rules allow customization of load balancing behavior usingmatch/action rules. Currently, load balancer rules are supported foronly layer 7 virtual servers with LbHttpProfile.The property is deprecated as NSX-T Load Balancer is deprecated.")]
        public IList<string> RuleIds { get; set; }
        /// <summary>
        /// To ensure one virtual server does not over consume resources,
        /// connections to a member can be rate limited.
        /// If it is not specified, it means that connection rate is unlimited.
        /// The property is deprecated as NSX-T Load Balancer is deprecated.
        /// </summary>
        [JsonProperty(PropertyName = "max_new_connection_rate")]
        [NSXTProperty(IsRequired: false, Description: @"To ensure one virtual server does not over consume resources,connections to a member can be rate limited.If it is not specified, it means that connection rate is unlimited.The property is deprecated as NSX-T Load Balancer is deprecated.")]
        //[System.ComponentModel.DataAnnotations.MinLength(1)]
        //[System.ComponentModel.DataAnnotations.MaxLength(2147483647)]
        public long? MaxNewConnectionRate { get; set; }
        /// <summary>
        /// When load balancer can not select a backend server to serve the
        /// request in default pool or pool in rules, the request would be served
        /// by sorry server pool.
        /// The property is deprecated as NSX-T Load Balancer is deprecated.
        /// </summary>
        [JsonProperty(PropertyName = "sorry_pool_id")]
        [NSXTProperty(IsRequired: false, Description: @"When load balancer can not select a backend server to serve therequest in default pool or pool in rules, the request would be servedby sorry server pool.The property is deprecated as NSX-T Load Balancer is deprecated.")]
        public string? SorryPoolId { get; set; }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "client_ssl_profile_binding")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTClientSslProfileBindingType ClientSslProfileBinding { get; set; }
        /// <summary>
        /// This is a deprecated property, please use 'default_pool_member_ports'
        /// instead.
        /// If default_pool_member_port is configured and default_pool_member_ports
        /// are not specified, both default_pool_member_port
        /// and default_pool_member_ports in response payload would return the same
        /// port value.
        /// If both are specified, default_pool_member_ports setting would take
        /// effect with higher priority.
        /// </summary>
        [JsonProperty(PropertyName = "default_pool_member_port")]
        [NSXTProperty(IsRequired: false, Description: @"This is a deprecated property, please use &apos;default_pool_member_ports&apos;instead.If default_pool_member_port is configured and default_pool_member_portsare not specified, both default_pool_member_portand default_pool_member_ports in response payload would return the sameport value.If both are specified, default_pool_member_ports setting would takeeffect with higher priority.")]
        public string? DefaultPoolMemberPort { get; set; }
        /// <summary>
        /// virtual server IP address
        /// </summary>
        [JsonProperty(PropertyName = "ip_address", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"virtual server IP address")]
        [System.ComponentModel.DataAnnotations.Required]
        public string IpAddress { get; set; }
        /// <summary>
        /// This is a deprecated property, please use 'ports' instead.
        /// Port setting could be single port for both L7 mode and L4 mode.
        /// For L4 mode, a single port range is also supported.
        /// The port setting could be a single port or port range such as
        /// "80", "1234-1236".
        /// If port is configured and ports are not specified, both port and
        /// ports in response payload would return the same port value.
        /// If both port and ports are configured, ports setting would take effect
        /// with higher priority.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        [NSXTProperty(IsRequired: false, Description: @"This is a deprecated property, please use &apos;ports&apos; instead.Port setting could be single port for both L7 mode and L4 mode.For L4 mode, a single port range is also supported.The port setting could be a single port or port range such as&quot;80&quot;, &quot;1234-1236&quot;.If port is configured and ports are not specified, both port andports in response payload would return the same port value.If both port and ports are configured, ports setting would take effectwith higher priority.")]
        public string? Port { get; set; }
        /// <summary>
        /// whether the virtual server is enabled
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        [NSXTProperty(IsRequired: false, Description: @"whether the virtual server is enabled")]
        public bool? Enabled { get; set; }
        /// <summary>
        /// Port setting could be a single port for both L7 mode and L4 mode.
        /// For L4 mode, multiple ports or port ranges are also supported such
        /// as "80", "443", "1234-1236".
        /// If ports is configured, both port and ports in the response payload
        /// would include port settings, notice that the port field value is the
        /// first element of ports.
        /// </summary>
        [JsonProperty(PropertyName = "ports")]
        [NSXTProperty(IsRequired: false, Description: @"Port setting could be a single port for both L7 mode and L4 mode.For L4 mode, multiple ports or port ranges are also supported suchas &quot;80&quot;, &quot;443&quot;, &quot;1234-1236&quot;.If ports is configured, both port and ports in the response payloadwould include port settings, notice that the port field value is thefirst element of ports.")]
        public IList<string> Ports { get; set; }
    }
}
