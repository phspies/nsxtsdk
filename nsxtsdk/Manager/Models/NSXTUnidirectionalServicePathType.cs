// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using NJsonSchema.Converters;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// Representing either forward or reverse service path for ingress or egress traffic respectively.
    /// </summary>
    [NSXTProperty(Description: @"Representing either forward or reverse service path for ingress or egress traffic respectively.")]
    public class NSXTUnidirectionalServicePathType 
    {
        /// <summary>
        /// List of service path hops that constitutes the forward or reverse service path.
        /// </summary>
        public IList<NSXTServicePathHopType> Hops { get; set; }
        /// <summary>
        /// Is forward or revserse service path in maintenance mode or not.
        /// </summary>
        public bool? InMaintenanceMode { get; set; }
        /// <summary>
        /// The number of times the traffic needs to cross hosts for the given forward or reverse service path.
        /// </summary>
        public long? HostCrossCount { get; set; }
        /// <summary>
        /// Is forward or revserse service path active or not.
        /// </summary>
        public bool? IsActive { get; set; }
        /// <summary>
        /// Unique identifier of one directional service path.
        /// </summary>
        public long? UnidirServicePathId { get; set; }
    }
}
