// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTLogicalRouterRouteCsvRecordType : NSXTCsvRecordType
    {
        public NSXTLogicalRouterRouteCsvRecordType()
        {
        }
        /// <summary>
        /// Logical router component(Service Router/Distributed Router) id
        /// </summary>
        [JsonProperty(PropertyName = "lr_component_id")]
        [NSXTProperty(IsRequired: false, Description: @"Logical router component(Service Router/Distributed Router) id")]
        public string? LrComponentId { get; set; }
        /// <summary>
        /// The IP of the next hop
        /// </summary>
        [JsonProperty(PropertyName = "next_hop")]
        [NSXTProperty(IsRequired: false, Description: @"The IP of the next hop")]
        public string? NextHop { get; set; }
        /// <summary>
        /// Logical router component(Service Router/Distributed Router) type
        /// </summary>
        [JsonProperty(PropertyName = "lr_component_type")]
        [NSXTProperty(IsRequired: false, Description: @"Logical router component(Service Router/Distributed Router) type")]
        public string? LrComponentType { get; set; }
        /// <summary>
        /// CIDR network address
        /// </summary>
        [JsonProperty(PropertyName = "network", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"CIDR network address")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Network { get; set; }
        /// <summary>
        /// Route type (USER, CONNECTED, NSX_INTERNAL,..)
        /// </summary>
        [JsonProperty(PropertyName = "route_type", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Route type (USER, CONNECTED, NSX_INTERNAL,..)")]
        [System.ComponentModel.DataAnnotations.Required]
        public string RouteType { get; set; }
        /// <summary>
        /// The id of the logical router port which is used as the next hop
        /// </summary>
        [JsonProperty(PropertyName = "logical_router_port_id")]
        [NSXTProperty(IsRequired: false, Description: @"The id of the logical router port which is used as the next hop")]
        public string? LogicalRouterPortId { get; set; }
        /// <summary>
        /// The admin distance of the next hop
        /// </summary>
        [JsonProperty(PropertyName = "admin_distance")]
        [NSXTProperty(IsRequired: false, Description: @"The admin distance of the next hop")]
        public long? AdminDistance { get; set; }
    }
}
