// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using System.Runtime.Serialization;
using nsxtsdk.Models;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// This field indicates purpose of a LogicalSwitch. It is set by manager internallyor user can provide this field. If not set, DEFAULT type is assigned.NSX components can use this field to create LogicalSwitch that provides componentspecific functionality.DEFAULT type LogicalSwitches are created for basic L2 connectivity by API users.SERVICE_PLANE type LogicalSwitches are system created service plane LogicalSwitches forService Insertion service. User can not create SERVICE_PLANE type of LogicalSwitch.DHCP_RELAY type LogicalSwitches are created by external user like Policy with specialpermissions or by system and will be treated as internal LogicalSwitches. SuchLogicalSwitch will not be exposed to vSphere user.GLOBAL type LogicalSwitches are created to span multiple NSX domains to connect multipleremote sites.INTER_ROUTER type LogicalSwitches are policy-created LogicalSwitches whichprovide inter-router connectivity
    /// </summary>
    [NSXTProperty(Description: @"This field indicates purpose of a LogicalSwitch. It is set by manager internallyor user can provide this field. If not set, DEFAULT type is assigned.NSX components can use this field to create LogicalSwitch that provides componentspecific functionality.DEFAULT type LogicalSwitches are created for basic L2 connectivity by API users.SERVICE_PLANE type LogicalSwitches are system created service plane LogicalSwitches forService Insertion service. User can not create SERVICE_PLANE type of LogicalSwitch.DHCP_RELAY type LogicalSwitches are created by external user like Policy with specialpermissions or by system and will be treated as internal LogicalSwitches. SuchLogicalSwitch will not be exposed to vSphere user.GLOBAL type LogicalSwitches are created to span multiple NSX domains to connect multipleremote sites.INTER_ROUTER type LogicalSwitches are policy-created LogicalSwitches whichprovide inter-router connectivity")]
    public enum NSXTLogicalSwitchSwitchTypeEnumType
    {
        [EnumMember(Value = "DEFAULT")]
        DEFAULT = 1,
        [EnumMember(Value = "SERVICE_PLANE")]
        SERVICEPLANE = 2,
        [EnumMember(Value = "DHCP_RELAY")]
        DHCPRELAY = 3,
        [EnumMember(Value = "GLOBAL")]
        GLOBAL = 4,
        [EnumMember(Value = "INTER_ROUTER")]
        INTERROUTER = 5,
        [EnumMember(Value = "EVPN")]
        EVPN = 6,
    }
}
