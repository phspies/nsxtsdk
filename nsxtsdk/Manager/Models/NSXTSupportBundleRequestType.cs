// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTSupportBundleRequestType 
    {
        public NSXTSupportBundleRequestType()
        {
            ALL = test
            DEFAULT = test
        }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "remote_file_server")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTSupportBundleRemoteFileServerType RemoteFileServer { get; set; }
        /// <summary>
        /// List of dynamic content filters that specify additional content to include in the support bundle. The list of available
        /// filters available depends on your NSX-T deployment and can be determined by invoking the GET
        /// /api/v1/adminstration/support-bundles/dynamic-content-filters NSX API. For example, if NSX Intelligence is deployed,
        /// filters for collecting specific information about services are available.
        /// </summary>
        [JsonProperty(PropertyName = "dynamic_content_filters")]
        [NSXTProperty(IsRequired: false, Description: @"List of dynamic content filters that specify additional content to include in the support bundle. The list of available filters available depends on your NSX-T deployment and can be determined by invoking the GET /api/v1/adminstration/support-bundles/dynamic-content-filters NSX API. For example, if NSX Intelligence is deployed, filters for collecting specific information about services are available.")]
        public IList<string> DynamicContentFilters { get; set; }
        /// <summary>
        /// Bundle should include content of specified type
        /// </summary>
        [JsonProperty(PropertyName = "content_filters")]
        [NSXTProperty(IsRequired: false, Description: @"Bundle should include content of specified type")]
        public IList<string> ContentFilters { get; set; }
        /// <summary>
        /// Include log files with modified times not past the age limit in days
        /// </summary>
        [JsonProperty(PropertyName = "log_age_limit")]
        [NSXTProperty(IsRequired: false, Description: @"Include log files with modified times not past the age limit in days")]
        //[System.ComponentModel.DataAnnotations.MinLength(1)]
        public long? LogAgeLimit { get; set; }
        /// <summary>
        /// List of container clusters and their nodes requiring support bundle collection
        /// </summary>
        [JsonProperty(PropertyName = "container_nodes")]
        [NSXTProperty(IsRequired: false, Description: @"List of container clusters and their nodes requiring support bundle collection")]
        public IList<NSXTSupportBundleContainerNodeType> ContainerNodes { get; set; }
        /// <summary>
        /// List of cluster/fabric node UUIDs processed in specified order
        /// </summary>
        [JsonProperty(PropertyName = "nodes")]
        [NSXTProperty(IsRequired: false, Description: @"List of cluster/fabric node UUIDs processed in specified order")]
        public IList<string> Nodes { get; set; }
    }
}
