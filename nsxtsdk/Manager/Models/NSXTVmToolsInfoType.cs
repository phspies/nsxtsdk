// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using NJsonSchema.Converters;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTVmToolsInfoType : NSXTDiscoveredResourceType
    {
        /// <summary>
        /// 
        /// </summary>
        public NSXTResourceReferenceType Source { get; set; }
        /// <summary>
        /// Type of VM - Edge, Service or other.
        /// </summary>
        public NSXTVmToolsInfoVmTypeEnumType? VmType { get; set; }
        /// <summary>
        /// Id of the VM which is assigned locally by the host. It is the VM-moref on ESXi hosts, in other environments it is VM
        /// UUID.
        /// </summary>
        public string? HostLocalId { get; set; }
        /// <summary>
        /// Version of network agent on the VM of a third party partner solution.
        /// </summary>
        public string? NetworkAgentVersion { get; set; }
        /// <summary>
        /// Version of file agent on the VM of a third party partner solution.
        /// </summary>
        public string? FileAgentVersion { get; set; }
        /// <summary>
        /// Current external id of this virtual machine in the system.
        /// </summary>
        public string? ExternalId { get; set; }
        /// <summary>
        /// Version of VMTools installed on the VM.
        /// </summary>
        public string? ToolsVersion { get; set; }
        /// <summary>
        /// Endpoint Protection (Third party AV partner using NXGI) status on the VM. TRUE  - VM is configured and protected by EPP
        /// Service VM. FALSE - VM is either not configured for protection or VM is disconnected from EPP Service VM.
        /// </summary>
        public bool? SvmConnectivity { get; set; }
        /// <summary>
        /// Connectivity Status between each Guest Introspection Solution deployed in the data center with the guest VM.
        /// </summary>
        public IList<NSXTSvmConnectivityStatusType> SvmStatus { get; set; }
    }
}
