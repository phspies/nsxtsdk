// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTCsrType : NSXTManagedResourceType
    {
        /// <summary>
        /// Size measured in bits of the public key used in a cryptographic algorithm.
        /// </summary>
        [JsonProperty(PropertyName = "key_size", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Size measured in bits of the public key used in a cryptographic algorithm.")]
        [System.ComponentModel.DataAnnotations.Required]
        public long KeySize { get; set; }
        /// <summary>
        /// PEM encoded certificate data.
        /// </summary>
        [JsonProperty(PropertyName = "pem_encoded")]
        [NSXTProperty(IsRequired: false, Description: @"PEM encoded certificate data.")]
        public string? PemEncoded { get; set; }
        /// <summary>
        /// Cryptographic algorithm(asymmetric ) used by the public key for data encryption.
        /// </summary>
        [JsonProperty(PropertyName = "algorithm", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Cryptographic algorithm(asymmetric ) used by the public key for data encryption.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTCsrAlgorithmEnumType Algorithm { get; set; }
        /// <summary>
        /// The certificate owner's information. (CN, O, OU, C, ST, L)
        /// </summary>
        [JsonProperty(PropertyName = "subject", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The certificate owner&apos;s information. (CN, O, OU, C, ST, L)")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTPrincipalType Subject { get; set; }
    }
}
