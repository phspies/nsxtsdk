// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.ManagerModels
{
    /// <summary>
    /// Icon to be applied at dashboard for widgets and UI elements.
    /// </summary>
    [NSXTProperty(Description: @"Icon to be applied at dashboard for widgets and UI elements.")]
    public class NSXTIconType 
    {
        /// <summary>
        /// If specified as PRE, the icon appears before the UI element. If set as POST, the icon appears after the UI element.
        /// </summary>
        [JsonProperty(PropertyName = "placement")]
        [NSXTProperty(IsRequired: false, Description: @"If specified as PRE, the icon appears before the UI element. If set as POST, the icon appears after the UI element.")]
        [NSXTDefaultProperty(Default: "PRE")]
        public NSXTIconPlacementEnumType? Placement { get; set; }
        /// <summary>
        /// Icon will be rendered based on its type. For example, if ERROR is chosen, then icon representing error will be rendered.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        [NSXTProperty(IsRequired: false, Description: @"Icon will be rendered based on its type. For example, if ERROR is chosen, then icon representing error will be rendered.")]
        public NSXTIconTypeEnumType? Type { get; set; }
        /// <summary>
        /// Multi-line text to be shown on tooltip while hovering over the icon.
        /// </summary>
        [JsonProperty(PropertyName = "tooltip")]
        [NSXTProperty(IsRequired: false, Description: @"Multi-line text to be shown on tooltip while hovering over the icon.")]
        public IList<NSXTTooltipType> Tooltip { get; set; }
    }
}
