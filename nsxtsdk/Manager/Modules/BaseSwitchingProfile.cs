// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using RestSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using Newtonsoft.Json;
using System.Net;
using nsxtsdk;
using nsxtsdk.Models;
using nsxtsdk.ManagerModels;

namespace nsxtapi.ManagerModules
{
    public class BaseSwitchingProfile
    {
        RestClient restClient;
        JsonSerializerSettings defaultSerializationSettings;
        public BaseSwitchingProfile(RestClient Client, JsonSerializerSettings DefaultSerializationSettings)
        {
            restClient = Client;
            defaultSerializationSettings = DefaultSerializationSettings;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSwitchingProfileStatusType GetSwitchingProfileStatus(string SwitchingProfileId)
        {
            if (SwitchingProfileId == null) { throw new System.ArgumentNullException("SwitchingProfileId cannot be null"); }
            NSXTSwitchingProfileStatusType returnValue = default(NSXTSwitchingProfileStatusType);
            StringBuilder GetSwitchingProfileStatusServiceURL = new StringBuilder("/switching-profiles/{switching-profile-id}/summary");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            GetSwitchingProfileStatusServiceURL.Replace("{switching-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SwitchingProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = GetSwitchingProfileStatusServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSwitchingProfileStatusType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTBaseSwitchingProfileType UpdateSwitchingProfile(string SwitchingProfileId, NSXTBaseSwitchingProfileType BaseSwitchingProfile)
        {
            if (SwitchingProfileId == null) { throw new System.ArgumentNullException("SwitchingProfileId cannot be null"); }
            if (BaseSwitchingProfile == null) { throw new System.ArgumentNullException("BaseSwitchingProfile cannot be null"); }
            NSXTBaseSwitchingProfileType returnValue = default(NSXTBaseSwitchingProfileType);
            StringBuilder UpdateSwitchingProfileServiceURL = new StringBuilder("/switching-profiles/{switching-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.PUT
            };
            request.AddHeader("Content-type", "application/json");
            UpdateSwitchingProfileServiceURL.Replace("{switching-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SwitchingProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.AddJsonBody(JsonConvert.SerializeObject(BaseSwitchingProfile, defaultSerializationSettings));
            request.Resource = UpdateSwitchingProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTBaseSwitchingProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTBaseSwitchingProfileType GetSwitchingProfile(string SwitchingProfileId)
        {
            if (SwitchingProfileId == null) { throw new System.ArgumentNullException("SwitchingProfileId cannot be null"); }
            NSXTBaseSwitchingProfileType returnValue = default(NSXTBaseSwitchingProfileType);
            StringBuilder GetSwitchingProfileServiceURL = new StringBuilder("/switching-profiles/{switching-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            GetSwitchingProfileServiceURL.Replace("{switching-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SwitchingProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = GetSwitchingProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTBaseSwitchingProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public void DeleteSwitchingProfile(string SwitchingProfileId, bool? Unbind = null)
        {
            if (SwitchingProfileId == null) { throw new System.ArgumentNullException("SwitchingProfileId cannot be null"); }
            
            StringBuilder DeleteSwitchingProfileServiceURL = new StringBuilder("/switching-profiles/{switching-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.DELETE
            };
            request.AddHeader("Content-type", "application/json");
            DeleteSwitchingProfileServiceURL.Replace("{switching-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SwitchingProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            if (Unbind != null) { request.AddQueryParameter("unbind", Unbind.ToString()); }
            request.Resource = DeleteSwitchingProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTBaseSwitchingProfileType CreateSwitchingProfile(NSXTBaseSwitchingProfileType BaseSwitchingProfile)
        {
            if (BaseSwitchingProfile == null) { throw new System.ArgumentNullException("BaseSwitchingProfile cannot be null"); }
            NSXTBaseSwitchingProfileType returnValue = default(NSXTBaseSwitchingProfileType);
            StringBuilder CreateSwitchingProfileServiceURL = new StringBuilder("/switching-profiles");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.POST
            };
            request.AddHeader("Content-type", "application/json");
            request.AddJsonBody(JsonConvert.SerializeObject(BaseSwitchingProfile, defaultSerializationSettings));
            request.Resource = CreateSwitchingProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTBaseSwitchingProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSwitchingProfilesListResultType ListSwitchingProfiles(string? Cursor = null, bool? IncludeSystemOwned = null, string? IncludedFields = null, long? PageSize = null, bool? SortAscending = null, string? SortBy = null, string? SwitchingProfileType = null)
        {
            NSXTSwitchingProfilesListResultType returnValue = default(NSXTSwitchingProfilesListResultType);
            StringBuilder ListSwitchingProfilesServiceURL = new StringBuilder("/switching-profiles");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            if (Cursor != null) { request.AddQueryParameter("cursor", Cursor.ToString()); }
            if (IncludeSystemOwned != null) { request.AddQueryParameter("include_system_owned", IncludeSystemOwned.ToString()); }
            if (IncludedFields != null) { request.AddQueryParameter("included_fields", IncludedFields.ToString()); }
            if (PageSize != null) { request.AddQueryParameter("page_size", PageSize.ToString()); }
            if (SortAscending != null) { request.AddQueryParameter("sort_ascending", SortAscending.ToString()); }
            if (SortBy != null) { request.AddQueryParameter("sort_by", SortBy.ToString()); }
            if (SwitchingProfileType != null) { request.AddQueryParameter("switching_profile_type", SwitchingProfileType.ToString()); }
            request.Resource = ListSwitchingProfilesServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSwitchingProfilesListResultType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
    }
}
