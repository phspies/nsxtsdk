// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using RestSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using Newtonsoft.Json;
using System.Net;
using nsxtsdk;
using nsxtsdk.Models;
using nsxtsdk.ManagerModels;

namespace nsxtapi.ManagerModules
{
    public class SystemHealthPlugin
    {
        RestClient restClient;
        JsonSerializerSettings defaultSerializationSettings;
        public SystemHealthPlugin(RestClient Client, JsonSerializerSettings DefaultSerializationSettings)
        {
            restClient = Client;
            defaultSerializationSettings = DefaultSerializationSettings;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSystemHealthPluginProfileType CreateSystemHealthPlugin(NSXTSystemHealthPluginProfileType SystemHealthPluginProfile)
        {
            if (SystemHealthPluginProfile == null) { throw new System.ArgumentNullException("SystemHealthPluginProfile cannot be null"); }
            NSXTSystemHealthPluginProfileType returnValue = default(NSXTSystemHealthPluginProfileType);
            StringBuilder CreateSystemHealthPluginServiceURL = new StringBuilder("/systemhealth/plugins");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.POST
            };
            request.AddHeader("Content-type", "application/json");
            request.AddJsonBody(JsonConvert.SerializeObject(SystemHealthPluginProfile, defaultSerializationSettings));
            request.Resource = CreateSystemHealthPluginServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSystemHealthPluginProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSystemHealthPluginProfileListType ListAllSystemHealthPlugins(string? Cursor = null, string? IncludedFields = null, long? PageSize = null, bool? SortAscending = null, string? SortBy = null)
        {
            NSXTSystemHealthPluginProfileListType returnValue = default(NSXTSystemHealthPluginProfileListType);
            StringBuilder ListAllSystemHealthPluginsServiceURL = new StringBuilder("/systemhealth/plugins");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            if (Cursor != null) { request.AddQueryParameter("cursor", Cursor.ToString()); }
            if (IncludedFields != null) { request.AddQueryParameter("included_fields", IncludedFields.ToString()); }
            if (PageSize != null) { request.AddQueryParameter("page_size", PageSize.ToString()); }
            if (SortAscending != null) { request.AddQueryParameter("sort_ascending", SortAscending.ToString()); }
            if (SortBy != null) { request.AddQueryParameter("sort_by", SortBy.ToString()); }
            request.Resource = ListAllSystemHealthPluginsServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSystemHealthPluginProfileListType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSystemHealthPluginProfileType ShowSystemHealthPlugin(string PluginId)
        {
            if (PluginId == null) { throw new System.ArgumentNullException("PluginId cannot be null"); }
            NSXTSystemHealthPluginProfileType returnValue = default(NSXTSystemHealthPluginProfileType);
            StringBuilder ShowSystemHealthPluginServiceURL = new StringBuilder("/systemhealth/plugins/{plugin-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            ShowSystemHealthPluginServiceURL.Replace("{plugin-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(PluginId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = ShowSystemHealthPluginServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSystemHealthPluginProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public void DeleteSystemHealthPlugin(string PluginId)
        {
            if (PluginId == null) { throw new System.ArgumentNullException("PluginId cannot be null"); }
            
            StringBuilder DeleteSystemHealthPluginServiceURL = new StringBuilder("/systemhealth/plugins/{plugin-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.DELETE
            };
            request.AddHeader("Content-type", "application/json");
            DeleteSystemHealthPluginServiceURL.Replace("{plugin-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(PluginId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = DeleteSystemHealthPluginServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTPluginFilePropertiesType CreatePluginFile(string FileName, string PluginId)
        {
            if (FileName == null) { throw new System.ArgumentNullException("FileName cannot be null"); }
            if (PluginId == null) { throw new System.ArgumentNullException("PluginId cannot be null"); }
            NSXTPluginFilePropertiesType returnValue = default(NSXTPluginFilePropertiesType);
            StringBuilder CreatePluginFileServiceURL = new StringBuilder("/systemhealth/plugins/{plugin-id}/files/{file-name}/data");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.POST
            };
            request.AddHeader("Content-type", "application/json");
            CreatePluginFileServiceURL.Replace("{file-name}", System.Uri.EscapeDataString(Helpers.ConvertToString(FileName, System.Globalization.CultureInfo.InvariantCulture)));
            CreatePluginFileServiceURL.Replace("{plugin-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(PluginId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = CreatePluginFileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTPluginFilePropertiesType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTPluginStatusListType ShowSystemHealthPluginOnNode(string NodeId)
        {
            if (NodeId == null) { throw new System.ArgumentNullException("NodeId cannot be null"); }
            NSXTPluginStatusListType returnValue = default(NSXTPluginStatusListType);
            StringBuilder ShowSystemHealthPluginOnNodeServiceURL = new StringBuilder("/systemhealth/plugins/status/{node-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            ShowSystemHealthPluginOnNodeServiceURL.Replace("{node-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(NodeId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = ShowSystemHealthPluginOnNodeServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTPluginStatusListType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
    }
}
