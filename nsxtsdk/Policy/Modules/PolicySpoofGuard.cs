// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using RestSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using Newtonsoft.Json;
using System.Net;
using nsxtsdk;
using nsxtsdk.Models;
using nsxtsdk.PolicyModels;

namespace nsxtapi.PolicyModules
{
    public class PolicySpoofGuard
    {
        RestClient restClient;
        JsonSerializerSettings defaultSerializationSettings;
        public PolicySpoofGuard(RestClient Client, JsonSerializerSettings DefaultSerializationSettings)
        {
            restClient = Client;
            defaultSerializationSettings = DefaultSerializationSettings;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSpoofGuardProfileListResultType GlobalListSpoofGuardProfiles(string? Cursor = null, bool? IncludeMarkForDeleteObjects = null, string? IncludedFields = null, long? PageSize = null, bool? SortAscending = null, string? SortBy = null)
        {
            NSXTSpoofGuardProfileListResultType returnValue = default(NSXTSpoofGuardProfileListResultType);
            StringBuilder ListSpoofGuardProfilesServiceURL = new StringBuilder("/global-infra/spoofguard-profiles");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            if (Cursor != null) { request.AddQueryParameter("cursor", Cursor.ToString()); }
            if (IncludeMarkForDeleteObjects != null) { request.AddQueryParameter("include_mark_for_delete_objects", IncludeMarkForDeleteObjects.ToString()); }
            if (IncludedFields != null) { request.AddQueryParameter("included_fields", IncludedFields.ToString()); }
            if (PageSize != null) { request.AddQueryParameter("page_size", PageSize.ToString()); }
            if (SortAscending != null) { request.AddQueryParameter("sort_ascending", SortAscending.ToString()); }
            if (SortBy != null) { request.AddQueryParameter("sort_by", SortBy.ToString()); }
            request.Resource = ListSpoofGuardProfilesServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSpoofGuardProfileListResultType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSpoofGuardProfileType CreateOrUpdateSpoofGuardProfile(string SpoofguardProfileId, NSXTSpoofGuardProfileType SpoofGuardProfile, bool? Override = null)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            if (SpoofGuardProfile == null) { throw new System.ArgumentNullException("SpoofGuardProfile cannot be null"); }
            NSXTSpoofGuardProfileType returnValue = default(NSXTSpoofGuardProfileType);
            StringBuilder CreateOrUpdateSpoofGuardProfileServiceURL = new StringBuilder("/infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.PUT
            };
            request.AddHeader("Content-type", "application/json");
            CreateOrUpdateSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.AddJsonBody(JsonConvert.SerializeObject(SpoofGuardProfile, defaultSerializationSettings));
            if (Override != null) { request.AddQueryParameter("override", Override.ToString()); }
            request.Resource = CreateOrUpdateSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSpoofGuardProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public void PatchSpoofGuardProfile(string SpoofguardProfileId, NSXTSpoofGuardProfileType SpoofGuardProfile, bool? Override = null)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            if (SpoofGuardProfile == null) { throw new System.ArgumentNullException("SpoofGuardProfile cannot be null"); }
            
            StringBuilder PatchSpoofGuardProfileServiceURL = new StringBuilder("/infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.PATCH
            };
            request.AddHeader("Content-type", "application/json");
            PatchSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.AddJsonBody(JsonConvert.SerializeObject(SpoofGuardProfile, defaultSerializationSettings));
            if (Override != null) { request.AddQueryParameter("override", Override.ToString()); }
            request.Resource = PatchSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSpoofGuardProfileType GetSpoofGuardProfile(string SpoofguardProfileId)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            NSXTSpoofGuardProfileType returnValue = default(NSXTSpoofGuardProfileType);
            StringBuilder GetSpoofGuardProfileServiceURL = new StringBuilder("/infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            GetSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = GetSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSpoofGuardProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public void DeleteSpoofGuardProfile(string SpoofguardProfileId, bool? Override = null)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            
            StringBuilder DeleteSpoofGuardProfileServiceURL = new StringBuilder("/infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.DELETE
            };
            request.AddHeader("Content-type", "application/json");
            DeleteSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            if (Override != null) { request.AddQueryParameter("override", Override.ToString()); }
            request.Resource = DeleteSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSpoofGuardProfileListResultType ListSpoofGuardProfiles(string? Cursor = null, bool? IncludeMarkForDeleteObjects = null, string? IncludedFields = null, long? PageSize = null, bool? SortAscending = null, string? SortBy = null)
        {
            NSXTSpoofGuardProfileListResultType returnValue = default(NSXTSpoofGuardProfileListResultType);
            StringBuilder ListSpoofGuardProfilesServiceURL = new StringBuilder("/infra/spoofguard-profiles");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            if (Cursor != null) { request.AddQueryParameter("cursor", Cursor.ToString()); }
            if (IncludeMarkForDeleteObjects != null) { request.AddQueryParameter("include_mark_for_delete_objects", IncludeMarkForDeleteObjects.ToString()); }
            if (IncludedFields != null) { request.AddQueryParameter("included_fields", IncludedFields.ToString()); }
            if (PageSize != null) { request.AddQueryParameter("page_size", PageSize.ToString()); }
            if (SortAscending != null) { request.AddQueryParameter("sort_ascending", SortAscending.ToString()); }
            if (SortBy != null) { request.AddQueryParameter("sort_by", SortBy.ToString()); }
            request.Resource = ListSpoofGuardProfilesServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSpoofGuardProfileListResultType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSpoofGuardProfileType GlobalCreateOrUpdateSpoofGuardProfile(string SpoofguardProfileId, NSXTSpoofGuardProfileType SpoofGuardProfile, bool? Override = null)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            if (SpoofGuardProfile == null) { throw new System.ArgumentNullException("SpoofGuardProfile cannot be null"); }
            NSXTSpoofGuardProfileType returnValue = default(NSXTSpoofGuardProfileType);
            StringBuilder CreateOrUpdateSpoofGuardProfileServiceURL = new StringBuilder("/global-infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.PUT
            };
            request.AddHeader("Content-type", "application/json");
            CreateOrUpdateSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.AddJsonBody(JsonConvert.SerializeObject(SpoofGuardProfile, defaultSerializationSettings));
            if (Override != null) { request.AddQueryParameter("override", Override.ToString()); }
            request.Resource = CreateOrUpdateSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSpoofGuardProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public void GlobalPatchSpoofGuardProfile(string SpoofguardProfileId, NSXTSpoofGuardProfileType SpoofGuardProfile, bool? Override = null)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            if (SpoofGuardProfile == null) { throw new System.ArgumentNullException("SpoofGuardProfile cannot be null"); }
            
            StringBuilder PatchSpoofGuardProfileServiceURL = new StringBuilder("/global-infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.PATCH
            };
            request.AddHeader("Content-type", "application/json");
            PatchSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.AddJsonBody(JsonConvert.SerializeObject(SpoofGuardProfile, defaultSerializationSettings));
            if (Override != null) { request.AddQueryParameter("override", Override.ToString()); }
            request.Resource = PatchSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public NSXTSpoofGuardProfileType GlobalGetSpoofGuardProfile(string SpoofguardProfileId)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            NSXTSpoofGuardProfileType returnValue = default(NSXTSpoofGuardProfileType);
            StringBuilder GetSpoofGuardProfileServiceURL = new StringBuilder("/global-infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.GET
            };
            request.AddHeader("Content-type", "application/json");
            GetSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            request.Resource = GetSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                returnValue = JsonConvert.DeserializeObject<NSXTSpoofGuardProfileType>(response.Content, defaultSerializationSettings);
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            return returnValue;
        }
        /// <summary>
        /// 
        /// </summary>
        [NSXTProperty(Description: @"")]
        public void GlobalDeleteSpoofGuardProfile(string SpoofguardProfileId, bool? Override = null)
        {
            if (SpoofguardProfileId == null) { throw new System.ArgumentNullException("SpoofguardProfileId cannot be null"); }
            
            StringBuilder DeleteSpoofGuardProfileServiceURL = new StringBuilder("/global-infra/spoofguard-profiles/{spoofguard-profile-id}");
            var request = new RestRequest
            {              
                RequestFormat = DataFormat.Json,
                Method = Method.DELETE
            };
            request.AddHeader("Content-type", "application/json");
            DeleteSpoofGuardProfileServiceURL.Replace("{spoofguard-profile-id}", System.Uri.EscapeDataString(Helpers.ConvertToString(SpoofguardProfileId, System.Globalization.CultureInfo.InvariantCulture)));
            if (Override != null) { request.AddQueryParameter("override", Override.ToString()); }
            request.Resource = DeleteSpoofGuardProfileServiceURL.ToString();
            var response = restClient.Execute(request);
            if (response.StatusCode == HttpStatusCode.OK)
			{
                
			}
            else
            {
                throw new NSXTException(response.Content, response.StatusCode.ToString());
            }
            
        }
    }
}
