// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTPolicyDraftType : NSXTPolicyConfigResourceType
    {
        /// <summary>
        /// When specified, a manual draft will be created w.r.t. the specified
        /// draft. If not specified, manual draft will be created w.r.t. the
        /// current published configuration.
        /// For an auto draft, this will always be null.
        /// </summary>
        [JsonProperty(PropertyName = "ref_draft_path")]
        [NSXTProperty(IsRequired: false, Description: @"When specified, a manual draft will be created w.r.t. the specifieddraft. If not specified, manual draft will be created w.r.t. thecurrent published configuration.For an auto draft, this will always be null.")]
        public string? RefDraftPath { get; set; }
        /// <summary>
        /// Comments for a policy draft lock/unlock.
        /// </summary>
        [JsonProperty(PropertyName = "lock_comments")]
        [NSXTProperty(IsRequired: false, Description: @"Comments for a policy draft lock/unlock.")]
        public string? LockComments { get; set; }
        /// <summary>
        /// Indicates whether a draft should be locked. If the draft is locked by
        /// an user, then no other user would be able to modify or publish this
        /// draft. Once the user releases the lock, other users can then modify
        /// or publish this draft.
        /// </summary>
        [JsonProperty(PropertyName = "locked")]
        [NSXTProperty(IsRequired: false, Description: @"Indicates whether a draft should be locked. If the draft is locked byan user, then no other user would be able to modify or publish thisdraft. Once the user releases the lock, other users can then modifyor publish this draft.")]
        public bool? Locked { get; set; }
        /// <summary>
        /// These are user defined configuration changes, which are applicable only
        /// in case of manual drafts. During the publish of a draft, system_area
        /// changes gets applied first, and then these changes.
        /// The value must be in a hierarchical body format.
        /// </summary>
        [JsonProperty(PropertyName = "user_area")]
        [NSXTProperty(IsRequired: false, Description: @"These are user defined configuration changes, which are applicable onlyin case of manual drafts. During the publish of a draft, system_areachanges gets applied first, and then these changes.The value must be in a hierarchical body format.")]
        public NSXTInfraType UserArea { get; set; }
        /// <summary>
        /// ID of the user who last modified the lock for a policy draft.
        /// </summary>
        [JsonProperty(PropertyName = "lock_modified_by")]
        [NSXTProperty(IsRequired: false, Description: @"ID of the user who last modified the lock for a policy draft.")]
        public string? LockModifiedBy { get; set; }
        /// <summary>
        /// In case of a large draft, wherein the size of user_area is so big
        /// that it can not be stored into one draft object, the data is then gets
        /// stored into multiple chunks in a draft data store.
        /// This value represents the ID of that data store.
        /// </summary>
        [JsonProperty(PropertyName = "user_area_store_id")]
        [NSXTProperty(IsRequired: false, Description: @"In case of a large draft, wherein the size of user_area is so bigthat it can not be stored into one draft object, the data is then getsstored into multiple chunks in a draft data store.This value represents the ID of that data store.")]
        public string? UserAreaStoreId { get; set; }
        /// <summary>
        /// In case of a large draft, wherein the size of system_area is so big
        /// that it can not be stored into one draft object, the data is then gets
        /// stored into multiple chunks in a draft data store.
        /// This value represents the ID of that data store.
        /// </summary>
        [JsonProperty(PropertyName = "system_area_store_id")]
        [NSXTProperty(IsRequired: false, Description: @"In case of a large draft, wherein the size of system_area is so bigthat it can not be stored into one draft object, the data is then getsstored into multiple chunks in a draft data store.This value represents the ID of that data store.")]
        public string? SystemAreaStoreId { get; set; }
        /// <summary>
        /// Policy draft locked/unlocked time in epoch milliseconds.
        /// </summary>
        [JsonProperty(PropertyName = "lock_modified_time")]
        [NSXTProperty(IsRequired: false, Description: @"Policy draft locked/unlocked time in epoch milliseconds.")]
        public long? LockModifiedTime { get; set; }
        /// <summary>
        /// Configuration changes against the current configuration,
        /// tracked by the system.
        /// The value is stored in a hierarchical body format.
        /// </summary>
        [JsonProperty(PropertyName = "system_area")]
        [NSXTProperty(IsRequired: false, Description: @"Configuration changes against the current configuration,tracked by the system.The value is stored in a hierarchical body format.")]
        public NSXTInfraType SystemArea { get; set; }
        /// <summary>
        /// Flag to indicate whether draft is auto created.
        /// True indicates that the draft is an auto draft.
        /// False indicates that the draft is a manual draft.
        /// </summary>
        [JsonProperty(PropertyName = "is_auto_draft")]
        [NSXTProperty(IsRequired: false, Description: @"Flag to indicate whether draft is auto created.True indicates that the draft is an auto draft.False indicates that the draft is a manual draft.")]
        public bool? IsAutoDraft { get; set; }
    }
}
