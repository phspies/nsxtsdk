// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTSecurityZoneRuleType : NSXTPolicyConfigResourceType
    {
        /// <summary>
        /// Flag to disable the rule. Default is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "disabled")]
        [NSXTProperty(IsRequired: false, Description: @"Flag to disable the rule. Default is enabled.")]
        public bool? Disabled { get; set; }
        /// <summary>
        /// Source field indicates the source path of the Rule.
        /// It could be;
        /// - Path of the current/other zone
        /// - One/more tiers associated with the zone
        /// - Shared Group
        /// - ANY (It should be the ONLY element in the services array. Error will be thrown
        /// if ANY is used in conjunction with other values.)
        /// Note that either Source or Destination has to be associated with the current Zone.
        /// </summary>
        [JsonProperty(PropertyName = "source", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Source field indicates the source path of the Rule.It could be; - Path of the current/other zone - One/more tiers associated with the zone - Shared Group - ANY (It should be the ONLY element in the services array. Error will be thrown        if ANY is used in conjunction with other values.)Note that either Source or Destination has to be associated with the current Zone.")]
        [System.ComponentModel.DataAnnotations.Required]
        public IList<string> Source { get; set; }
        /// <summary>
        /// User level field which will be printed in CLI and packet logs.
        /// </summary>
        [JsonProperty(PropertyName = "tag")]
        [NSXTProperty(IsRequired: false, Description: @"User level field which will be printed in CLI and packet logs.")]
        public string? Tag { get; set; }
        /// <summary>
        /// ID of the Service that is defined in Infra space. e.g. HTTPS.
        /// In order to specify all services, use the constant "ANY". If "ANY" is used,
        /// it should be the ONLY element in the services array. Error will be thrown
        /// if ANY is used in conjunction with other values.
        /// </summary>
        [JsonProperty(PropertyName = "services", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"ID of the Service that is defined in Infra space. e.g. HTTPS.In order to specify all services, use the constant &quot;ANY&quot;. If &quot;ANY&quot; is used,it should be the ONLY element in the services array. Error will be thrownif ANY is used in conjunction with other values.")]
        [System.ComponentModel.DataAnnotations.Required]
        public IList<string> Services { get; set; }
        /// <summary>
        /// Text for additional notes on changes.
        /// </summary>
        [JsonProperty(PropertyName = "notes")]
        [NSXTProperty(IsRequired: false, Description: @"Text for additional notes on changes.")]
        public string? Notes { get; set; }
        /// <summary>
        /// Destination field indicates the destination path of the Rule.
        /// It could be;
        /// - Path of the current/other zone
        /// - One/more tiers associated with the zone
        /// - Shared Group
        /// - ANY (It should be the ONLY element in the services array. Error will be thrown
        /// if ANY is used in conjunction with other values.)
        /// Note that either Source or Destination has to be associated with the current Zone.
        /// </summary>
        [JsonProperty(PropertyName = "destination", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Destination field indicates the destination path of the Rule.It could be; - Path of the current/other zone - One/more tiers associated with the zone - Shared Group - ANY (It should be the ONLY element in the services array. Error will be thrown        if ANY is used in conjunction with other values.)Note that either Source or Destination has to be associated with the current Zone.")]
        [System.ComponentModel.DataAnnotations.Required]
        public IList<string> Destination { get; set; }
        /// <summary>
        /// Flag to enable packet logging. Default is disabled.
        /// </summary>
        [JsonProperty(PropertyName = "logged")]
        [NSXTProperty(IsRequired: false, Description: @"Flag to enable packet logging. Default is disabled.")]
        public bool? Logged { get; set; }
        /// <summary>
        /// The action to be applied to all the services.
        /// </summary>
        [JsonProperty(PropertyName = "action", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"The action to be applied to all the services.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTSecurityZoneRuleActionEnumType Action { get; set; }
        /// <summary>
        /// This field is used to resolve conflicts between multiple
        /// SecurityZoneRule under same securityZone
        /// </summary>
        [JsonProperty(PropertyName = "sequence_number")]
        [NSXTProperty(IsRequired: false, Description: @"This field is used to resolve conflicts between multipleSecurityZoneRule under same securityZone")]
        public long? SequenceNumber { get; set; }
    }
}
