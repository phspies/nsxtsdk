// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Enables traffic limit for incoming/outgoing broadcast and multicast packets. Use 0 to disable rate limiting for a
        /// specific traffic type
    /// </summary>
    [NSXTProperty(Description: @"Enables traffic limit for incoming/outgoing broadcast and multicast packets. Use 0 to disable rate limiting for a specific traffic type")]
    public class NSXTTrafficRateLimitsType 
    {
        public NSXTTrafficRateLimitsType()
        {
            RxMulticast = test
            TxMulticast = test
            TxBroadcast = test
            RxBroadcast = test
        }
        /// <summary>
        /// Incoming multicast traffic limit in packets per second
        /// </summary>
        [JsonProperty(PropertyName = "rx_multicast")]
        [NSXTProperty(IsRequired: false, Description: @"Incoming multicast traffic limit in packets per second")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        public int? RxMulticast { get; set; }
        /// <summary>
        /// Outgoing multicast traffic limit in packets per second
        /// </summary>
        [JsonProperty(PropertyName = "tx_multicast")]
        [NSXTProperty(IsRequired: false, Description: @"Outgoing multicast traffic limit in packets per second")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        public int? TxMulticast { get; set; }
        /// <summary>
        /// Outgoing broadcast traffic limit in packets per second
        /// </summary>
        [JsonProperty(PropertyName = "tx_broadcast")]
        [NSXTProperty(IsRequired: false, Description: @"Outgoing broadcast traffic limit in packets per second")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        public int? TxBroadcast { get; set; }
        /// <summary>
        /// Incoming broadcast traffic limit in packets per second
        /// </summary>
        [JsonProperty(PropertyName = "rx_broadcast")]
        [NSXTProperty(IsRequired: false, Description: @"Incoming broadcast traffic limit in packets per second")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        public int? RxBroadcast { get; set; }
    }
}
