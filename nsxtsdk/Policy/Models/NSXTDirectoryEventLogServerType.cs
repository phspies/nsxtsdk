// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTDirectoryEventLogServerType : NSXTManagedResourceType
    {
        public NSXTDirectoryEventLogServerType()
        {
        }
        /// <summary>
        /// Directory event log server connection user name.
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        [NSXTProperty(IsRequired: false, Description: @"Directory event log server connection user name.")]
        public string? Username { get; set; }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTDirectoryEventLogServerStatusType Status { get; set; }
        /// <summary>
        /// Directory Event Log server DNS host name or ip address which is reachable by NSX manager to be connected and do event
        /// fetching.
        /// </summary>
        [JsonProperty(PropertyName = "host", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Directory Event Log server DNS host name or ip address which is reachable by NSX manager to be connected and do event fetching.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Host { get; set; }
        /// <summary>
        /// Directory event log server connection password.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        [NSXTProperty(IsRequired: false, Description: @"Directory event log server connection password.")]
        public string? Password { get; set; }
        /// <summary>
        /// Directory domain name which best describes the domain. It could be unique fqdn name or it could also be descriptive.
        /// There is no unique contraint for domain name among different domains.
        /// </summary>
        [JsonProperty(PropertyName = "domain_name")]
        [NSXTProperty(IsRequired: false, Description: @"Directory domain name which best describes the domain. It could be unique fqdn name or it could also be descriptive. There is no unique contraint for domain name among different domains.")]
        public string? DomainName { get; set; }
    }
}
