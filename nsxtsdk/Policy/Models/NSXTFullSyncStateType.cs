using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using NJsonSchema.Converters;
using Newtonsoft.Json.Converters;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTFullSyncStateType : NSXTPolicyConfigResourceType
    {
        /// <summary>
        /// Timestamp of last update, could be progress or success or error.
        /// </summary>
        [JsonProperty(PropertyName = "last_update_time")]
        public long? LastUpdateTime { get; set; }
        /// <summary>
        /// Errors occurred during full sync.
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<string> Errors { get; set; }
        /// <summary>
        /// Full sync id generated by Async Replicator (AR) service.
        /// </summary>
        [JsonProperty(PropertyName = "full_sync_id")]
        public string? FullSyncId { get; set; }
        /// <summary>
        /// Timestamp of Full Sync start.
        /// </summary>
        [JsonProperty(PropertyName = "start_time")]
        public long? StartTime { get; set; }
        /// <summary>
        /// Deprecated, refer to last_update_time for the last update time stamp.
        /// </summary>
        [JsonProperty(PropertyName = "last_upate_time")]
        public long? LastUpateTime { get; set; }
        /// <summary>
        /// The current stage of full sync completion for ongoing sync.
        /// When Local Manager (LM) receives full sync data from AR, LM starts
        /// with workflow to prserve the state and restore the full sync from
        /// where it has left off in case of change of leadership of the service
        /// to different NSX node or LM is restarted.
        /// LM starts the full sync workflow with state INITIAL capturing the
        /// AR full sync id and data location details. The stage/state transition
        /// follows the order given below
        /// INITIAL - Full sync started
        /// PROCESSED_FULLSYNC_DATA - Compelted processing the full state data
        /// provided by AR
        /// PRCESSED_DELTAS - Completed processing pending delta changes provided
        /// by AR.
        /// DELETED_STALE_ENTITIES - Completed deletion of all global entities on
        /// LM that are not in GM anymore
        /// COMPLETED - Full sync handling is completed on LM
        /// ERROR - Full sync failed with errors on LM, in which case AR will
        /// re-attempt full sync later point in time for the LM
        /// ABORTED - Indicates that the full sync cancelled as per user request
        /// </summary>
        [JsonProperty(PropertyName = "last_completed_stage")]
        [JsonConverter(typeof(StringEnumConverter))]
        public NSXTFullSyncStateLastCompletedStageEnumType? LastCompletedStage { get; set; }
    }
}
