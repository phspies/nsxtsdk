// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTALBWafPolicyType : NSXTPolicyConfigResourceType
    {
        /// <summary>
        /// Parameters for tuning Application learning.
        /// </summary>
        [JsonProperty(PropertyName = "learning_params")]
        [NSXTProperty(IsRequired: false, Description: @"Parameters for tuning Application learning.")]
        public NSXTALBAppLearningParamsType LearningParams { get; set; }
        /// <summary>
        /// Minimum confidence label required for auto rule updates.
        /// Enum options - CONFIDENCE_VERY_HIGH, CONFIDENCE_HIGH,
        /// CONFIDENCE_PROBABLE, CONFIDENCE_LOW, CONFIDENCE_NONE.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as CONFIDENCE_VERY_HIGH.
        /// </summary>
        [JsonProperty(PropertyName = "min_confidence")]
        [NSXTProperty(IsRequired: false, Description: @"Minimum confidence label required for auto rule updates.Enum options - CONFIDENCE_VERY_HIGH, CONFIDENCE_HIGH,CONFIDENCE_PROBABLE, CONFIDENCE_LOW, CONFIDENCE_NONE.Default value when not specified in API or module isinterpreted by ALB Controller as CONFIDENCE_VERY_HIGH.")]
        [NSXTDefaultProperty(Default: "CONFIDENCE_VERY_HIGH")]
        public NSXTAlbwafPolicyMinConfidenceEnumType? MinConfidence { get; set; }
        /// <summary>
        /// WAF Rules are categorized in to groups based on their
        /// characterization.
        /// These groups are created by the user and will be enforced
        /// after the CRS groups.
        /// </summary>
        [JsonProperty(PropertyName = "post_crs_groups")]
        [NSXTProperty(IsRequired: false, Description: @"WAF Rules are categorized in to groups based on theircharacterization.These groups are created by the user and will be enforcedafter the CRS groups.")]
        public IList<NSXTALBWafRuleGroupType> PostCrsGroups { get; set; }
        /// <summary>
        /// Enable Application Learning based rule updates on the WAF
        /// Profile.
        /// Rules will be programmed in dedicated WAF learning group.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "enable_auto_rule_updates")]
        [NSXTProperty(IsRequired: false, Description: @"Enable Application Learning based rule updates on the WAFProfile.Rules will be programmed in dedicated WAF learning group.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? EnableAutoRuleUpdates { get; set; }
        /// <summary>
        /// WAF Rules are categorized in to groups based on their
        /// characterization.
        /// These groups are created by the user and will be  enforced
        /// before the CRS groups.
        /// </summary>
        [JsonProperty(PropertyName = "pre_crs_groups")]
        [NSXTProperty(IsRequired: false, Description: @"WAF Rules are categorized in to groups based on theircharacterization.These groups are created by the user and will be  enforcedbefore the CRS groups.")]
        public IList<NSXTALBWafRuleGroupType> PreCrsGroups { get; set; }
        /// <summary>
        /// WAF Rules are categorized in to groups based on their
        /// characterization.
        /// These groups are system created with CRS groups.
        /// </summary>
        [JsonProperty(PropertyName = "crs_groups")]
        [NSXTProperty(IsRequired: false, Description: @"WAF Rules are categorized in to groups based on theircharacterization.These groups are system created with CRS groups.")]
        public IList<NSXTALBWafRuleGroupType> CrsGroups { get; set; }
        /// <summary>
        /// Allow Rules to overwrite the policy mode.
        /// This must be set if the policy mode is set to enforcement.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "allow_mode_delegation")]
        [NSXTProperty(IsRequired: false, Description: @"Allow Rules to overwrite the policy mode.This must be set if the policy mode is set to enforcement.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? AllowModeDelegation { get; set; }
        /// <summary>
        /// Creator name.
        /// </summary>
        [JsonProperty(PropertyName = "created_by")]
        [NSXTProperty(IsRequired: false, Description: @"Creator name.")]
        public string? CreatedBy { get; set; }
        /// <summary>
        /// Application Specific Signatures.
        /// </summary>
        [JsonProperty(PropertyName = "application_signatures")]
        [NSXTProperty(IsRequired: false, Description: @"Application Specific Signatures.")]
        public NSXTALBWafApplicationSignaturesType ApplicationSignatures { get; set; }
        /// <summary>
        /// WAF Ruleset paranoia  mode.
        /// This is used to select Rules based on the paranoia-level
        /// tag.
        /// Enum options - WAF_PARANOIA_LEVEL_LOW,
        /// WAF_PARANOIA_LEVEL_MEDIUM, WAF_PARANOIA_LEVEL_HIGH,
        /// WAF_PARANOIA_LEVEL_EXTREME.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as WAF_PARANOIA_LEVEL_LOW.
        /// </summary>
        [JsonProperty(PropertyName = "paranoia_level")]
        [NSXTProperty(IsRequired: false, Description: @"WAF Ruleset paranoia  mode.This is used to select Rules based on the paranoia-leveltag.Enum options - WAF_PARANOIA_LEVEL_LOW,WAF_PARANOIA_LEVEL_MEDIUM, WAF_PARANOIA_LEVEL_HIGH,WAF_PARANOIA_LEVEL_EXTREME.Default value when not specified in API or module isinterpreted by ALB Controller as WAF_PARANOIA_LEVEL_LOW.")]
        [NSXTDefaultProperty(Default: "WAF_PARANOIA_LEVEL_LOW")]
        public NSXTAlbwafPolicyParanoiaLevelEnumType? ParanoiaLevel { get; set; }
        /// <summary>
        /// WAF Policy mode.
        /// This can be detection or enforcement.
        /// It can be overwritten by rules if allow_mode_delegation is
        /// set.
        /// Enum options - WAF_MODE_DETECTION_ONLY,
        /// WAF_MODE_ENFORCEMENT.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as WAF_MODE_DETECTION_ONLY.
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        [NSXTProperty(IsRequired: false, Description: @"WAF Policy mode.This can be detection or enforcement.It can be overwritten by rules if allow_mode_delegation isset.Enum options - WAF_MODE_DETECTION_ONLY,WAF_MODE_ENFORCEMENT.Default value when not specified in API or module isinterpreted by ALB Controller as WAF_MODE_DETECTION_ONLY.")]
        [NSXTDefaultProperty(Default: "WAF_MODE_DETECTION_ONLY")]
        public NSXTAlbwafPolicyModeEnumType? Mode { get; set; }
        /// <summary>
        /// WAF Profile for WAF policy.
        /// It is a reference to an object of type WafProfile.
        /// </summary>
        [JsonProperty(PropertyName = "waf_profile_path", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"WAF Profile for WAF policy.It is a reference to an object of type WafProfile.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string WafProfilePath { get; set; }
        /// <summary>
        /// Enable Application Learning for this WAF policy.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "enable_app_learning")]
        [NSXTProperty(IsRequired: false, Description: @"Enable Application Learning for this WAF policy.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? EnableAppLearning { get; set; }
        /// <summary>
        /// The Positive Security Model.
        /// This is used to describe how the request or parts of the
        /// request should look like.
        /// It is executed in the Request Body Phase of Avi WAF.
        /// </summary>
        [JsonProperty(PropertyName = "positive_security_model")]
        [NSXTProperty(IsRequired: false, Description: @"The Positive Security Model.This is used to describe how the request or parts of therequest should look like.It is executed in the Request Body Phase of Avi WAF.")]
        public NSXTALBWafPositiveSecurityModelType PositiveSecurityModel { get; set; }
        /// <summary>
        /// Configure thresholds for confidence labels.
        /// </summary>
        [JsonProperty(PropertyName = "confidence_override")]
        [NSXTProperty(IsRequired: false, Description: @"Configure thresholds for confidence labels.")]
        public NSXTALBAppLearningConfidenceOverrideType ConfidenceOverride { get; set; }
        /// <summary>
        /// WAF core ruleset used for the CRS part of this Policy.
        /// It is a reference to an object of type WafCRS.
        /// </summary>
        [JsonProperty(PropertyName = "waf_crs_path")]
        [NSXTProperty(IsRequired: false, Description: @"WAF core ruleset used for the CRS part of this Policy.It is a reference to an object of type WafCRS.")]
        public string? WafCrsPath { get; set; }
        /// <summary>
        /// WAF Policy failure mode.
        /// This can be 'Open' or 'Closed'.
        /// Enum options - WAF_FAILURE_MODE_OPEN,
        /// WAF_FAILURE_MODE_CLOSED.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as WAF_FAILURE_MODE_OPEN.
        /// </summary>
        [JsonProperty(PropertyName = "failure_mode")]
        [NSXTProperty(IsRequired: false, Description: @"WAF Policy failure mode.This can be &apos;Open&apos; or &apos;Closed&apos;.Enum options - WAF_FAILURE_MODE_OPEN,WAF_FAILURE_MODE_CLOSED.Default value when not specified in API or module isinterpreted by ALB Controller as WAF_FAILURE_MODE_OPEN.")]
        [NSXTDefaultProperty(Default: "WAF_FAILURE_MODE_OPEN")]
        public NSXTAlbwafPolicyFailureModeEnumType? FailureMode { get; set; }
    }
}
