// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTIdsSignatureVersionType : NSXTPolicyConfigResourceType
    {
        public NSXTIdsSignatureVersionType()
        {
        }
        /// <summary>
        /// This flag tells the status of the signatures under a version.
        /// OUTDATED: It means the signatures under this version are outdated and new version is available.
        /// LATEST: It means the signatures of this version are up to date.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        [NSXTProperty(IsRequired: false, Description: @"This flag tells the status of the signatures under a version.OUTDATED: It means the signatures under this version are outdated and new version is available.LATEST: It means the signatures of this version are up to date.")]
        public NSXTIdsSignatureVersionStatusEnumType? Status { get; set; }
        /// <summary>
        /// Represents the version's change log.
        /// </summary>
        [JsonProperty(PropertyName = "change_log")]
        [NSXTProperty(IsRequired: false, Description: @"Represents the version&apos;s change log.")]
        public string? ChangeLog { get; set; }
        /// <summary>
        /// Time when this version was downloaded and saved.
        /// </summary>
        [JsonProperty(PropertyName = "update_time")]
        [NSXTProperty(IsRequired: false, Description: @"Time when this version was downloaded and saved.")]
        public long? UpdateTime { get; set; }
        /// <summary>
        /// Flag which tells whether the Signature version is uploaded by user or not.
        /// </summary>
        [JsonProperty(PropertyName = "user_uploaded")]
        [NSXTProperty(IsRequired: false, Description: @"Flag which tells whether the Signature version is uploaded by user or not.")]
        public bool? UserUploaded { get; set; }
        /// <summary>
        /// This flag tells which Version is currently active.
        /// ACTIVE: It means the signatures under this version is currently been used
        /// under IDS Profiles.
        /// NOTACTIVE: It means signatures of this version are available but not
        /// being used in IDS Profiles.
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        [NSXTProperty(IsRequired: false, Description: @"This flag tells which Version is currently active.ACTIVE: It means the signatures under this version is currently been used under IDS Profiles.NOTACTIVE: It means signatures of this version are available but not being used in IDS Profiles.")]
        public NSXTIdsSignatureVersionStateEnumType? State { get; set; }
        /// <summary>
        /// Represents the version id.
        /// </summary>
        [JsonProperty(PropertyName = "version_id")]
        [NSXTProperty(IsRequired: false, Description: @"Represents the version id.")]
        public string? VersionId { get; set; }
    }
}
