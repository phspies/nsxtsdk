// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTConditionType : NSXTExpressionType
    {
        public NSXTConditionType()
        {
        }
        /// <summary>
        /// Operator is made non-mandatory to support Segment and SegmentPort tag based expression. To evaluate expression
        /// for other types, operator value should be provided.
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        [NSXTProperty(IsRequired: false, Description: @"Operator is made non-mandatory to support Segment and SegmentPort tag based expression. To evaluate expressionfor other types, operator value should be provided.")]
        public NSXTConditionOperatorEnumType? OperatorProperty { get; set; }
        /// <summary>
        /// Value
        /// </summary>
        [JsonProperty(PropertyName = "value", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Value")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Value { get; set; }
        /// <summary>
        /// Default operator when not specified explicitly would be considered as EQUALS.
        /// If value for Condition is empty, then condition will not be evaluated.
        /// For example, Condition with key as Tag and value as "|tag" would be evaluated for tag value not for empty
        /// scope value.
        /// </summary>
        [JsonProperty(PropertyName = "scope_operator")]
        [NSXTProperty(IsRequired: false, Description: @"Default operator when not specified explicitly would be considered as EQUALS.If value for Condition is empty, then condition will not be evaluated.For example, Condition with key as Tag and value as &quot;|tag&quot; would be evaluated for tag value not for emptyscope value.")]
        public NSXTConditionScopeOperatorEnumType? ScopeOperator { get; set; }
        /// <summary>
        /// Key
        /// </summary>
        [JsonProperty(PropertyName = "key", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Key")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTConditionKeyEnumType Key { get; set; }
        /// <summary>
        /// Group member type
        /// </summary>
        [JsonProperty(PropertyName = "member_type", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Group member type")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTConditionMemberTypeEnumType MemberType { get; set; }
    }
}
