// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Advanced load balancer TCPProxyProfile object
    /// </summary>
    [NSXTProperty(Description: @"Advanced load balancer TCPProxyProfile object")]
    public class NSXTALBTCPProxyProfileType 
    {
        /// <summary>
        /// Size of the receive window.
        /// Allowed values are 2-65536.
        /// Unit is KB.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 64.
        /// </summary>
        [JsonProperty(PropertyName = "receive_window")]
        [NSXTProperty(IsRequired: false, Description: @"Size of the receive window.Allowed values are 2-65536.Unit is KB.Default value when not specified in API or module isinterpreted by ALB Controller as 64.")]
        //[System.ComponentModel.DataAnnotations.MinLength(2)]
        //[System.ComponentModel.DataAnnotations.MaxLength(65536)]
        [NSXTDefaultProperty(Default: "")]
        public long? ReceiveWindow { get; set; }
        /// <summary>
        /// Controls the our congestion window to send, normally it's 1
        /// mss, If this option is turned on, we use 10 msses.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "aggressive_congestion_avoidance")]
        [NSXTProperty(IsRequired: false, Description: @"Controls the our congestion window to send, normally it&apos;s 1mss, If this option is turned on, we use 10 msses.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? AggressiveCongestionAvoidance { get; set; }
        /// <summary>
        /// Controls the congestion control algorithm we use.
        /// Enum options - CC_ALGO_NEW_RENO, CC_ALGO_CUBIC,
        /// CC_ALGO_HTCP.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as CC_ALGO_NEW_RENO.
        /// </summary>
        [JsonProperty(PropertyName = "cc_algo")]
        [NSXTProperty(IsRequired: false, Description: @"Controls the congestion control algorithm we use.Enum options - CC_ALGO_NEW_RENO, CC_ALGO_CUBIC,CC_ALGO_HTCP.Default value when not specified in API or module isinterpreted by ALB Controller as CC_ALGO_NEW_RENO.")]
        [NSXTDefaultProperty(Default: "CC_ALGO_NEW_RENO")]
        public NSXTAlbtcpproxyProfileCcAlgoEnumType? CcAlgo { get; set; }
        /// <summary>
        /// Controls the number of duplicate acks required to trigger
        /// retransmission.
        /// Setting a higher value reduces retransmission caused by
        /// packet reordering.
        /// A larger value is recommended in public cloud environments
        /// where packet reordering is quite common.
        /// The default value is 8 in public cloud platforms (AWS,
        /// Azure, GCP), and 3 in other environments.
        /// Allowed values are 1-100.
        /// </summary>
        [JsonProperty(PropertyName = "reorder_threshold")]
        [NSXTProperty(IsRequired: false, Description: @"Controls the number of duplicate acks required to triggerretransmission.Setting a higher value reduces retransmission caused bypacket reordering.A larger value is recommended in public cloud environmentswhere packet reordering is quite common.The default value is 8 in public cloud platforms (AWS,Azure, GCP), and 3 in other environments.Allowed values are 1-100.")]
        //[System.ComponentModel.DataAnnotations.MinLength(1)]
        //[System.ComponentModel.DataAnnotations.MaxLength(100)]
        public long? ReorderThreshold { get; set; }
        /// <summary>
        /// The maximum number of attempts at retransmitting a SYN
        /// packet before giving up.
        /// Allowed values are 3-8.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 8.
        /// </summary>
        [JsonProperty(PropertyName = "max_syn_retransmissions")]
        [NSXTProperty(IsRequired: false, Description: @"The maximum number of attempts at retransmitting a SYNpacket before giving up.Allowed values are 3-8.Default value when not specified in API or module isinterpreted by ALB Controller as 8.")]
        //[System.ComponentModel.DataAnnotations.MinLength(3)]
        //[System.ComponentModel.DataAnnotations.MaxLength(8)]
        [NSXTDefaultProperty(Default: "")]
        public long? MaxSynRetransmissions { get; set; }
        /// <summary>
        /// The duration for keepalive probes or session idle timeout.
        /// Max value is 3600 seconds, min is 5.
        /// Set to 0 to allow infinite idle time.
        /// Allowed values are 5-14400.
        /// Special values are 0 - 'infinite'.
        /// Unit is SEC.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 600.
        /// </summary>
        [JsonProperty(PropertyName = "idle_connection_timeout")]
        [NSXTProperty(IsRequired: false, Description: @"The duration for keepalive probes or session idle timeout.Max value is 3600 seconds, min is 5.Set to 0 to allow infinite idle time.Allowed values are 5-14400.Special values are 0 - &apos;infinite&apos;.Unit is SEC.Default value when not specified in API or module isinterpreted by ALB Controller as 600.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(14400)]
        [NSXTDefaultProperty(Default: "")]
        public long? IdleConnectionTimeout { get; set; }
        /// <summary>
        /// Maximum TCP segment size.
        /// Allowed values are 512-9000.
        /// Special values are 0 - 'Use Interface MTU'.
        /// Unit is BYTES.
        /// </summary>
        [JsonProperty(PropertyName = "max_segment_size")]
        [NSXTProperty(IsRequired: false, Description: @"Maximum TCP segment size.Allowed values are 512-9000.Special values are 0 - &apos;Use Interface MTU&apos;.Unit is BYTES.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(9000)]
        public long? MaxSegmentSize { get; set; }
        /// <summary>
        /// Controls the behavior of idle connections.
        /// Enum options - KEEP_ALIVE, CLOSE_IDLE.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as KEEP_ALIVE.
        /// </summary>
        [JsonProperty(PropertyName = "idle_connection_type")]
        [NSXTProperty(IsRequired: false, Description: @"Controls the behavior of idle connections.Enum options - KEEP_ALIVE, CLOSE_IDLE.Default value when not specified in API or module isinterpreted by ALB Controller as KEEP_ALIVE.")]
        [NSXTDefaultProperty(Default: "KEEP_ALIVE")]
        public NSXTAlbtcpproxyProfileIdleConnectionTypeEnumType? IdleConnectionType { get; set; }
        /// <summary>
        /// Controls whether to keep the connection alive with
        /// keepalive messages in the TCP half close state.
        /// The interval for sending keepalive messages is 30s.
        /// If a timeout is already configured in the network profile,
        /// this will not override it.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "keepalive_in_halfclose_state")]
        [NSXTProperty(IsRequired: false, Description: @"Controls whether to keep the connection alive withkeepalive messages in the TCP half close state.The interval for sending keepalive messages is 30s.If a timeout is already configured in the network profile,this will not override it.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? KeepaliveInHalfcloseState { get; set; }
        /// <summary>
        /// The time (in millisec) to wait before closing a connection
        /// in the TIME_WAIT state.
        /// Allowed values are 500-2000.
        /// Special values are 0 - 'immediate'.
        /// Unit is MILLISECONDS.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 2000.
        /// </summary>
        [JsonProperty(PropertyName = "time_wait_delay")]
        [NSXTProperty(IsRequired: false, Description: @"The time (in millisec) to wait before closing a connectionin the TIME_WAIT state.Allowed values are 500-2000.Special values are 0 - &apos;immediate&apos;.Unit is MILLISECONDS.Default value when not specified in API or module isinterpreted by ALB Controller as 2000.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(2000)]
        [NSXTDefaultProperty(Default: "")]
        public long? TimeWaitDelay { get; set; }
        /// <summary>
        /// Congestion window scaling factor after recovery.
        /// Allowed values are 0-8.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 2.
        /// </summary>
        [JsonProperty(PropertyName = "congestion_recovery_scaling_factor")]
        [NSXTProperty(IsRequired: false, Description: @"Congestion window scaling factor after recovery.Allowed values are 0-8.Default value when not specified in API or module isinterpreted by ALB Controller as 2.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(8)]
        [NSXTDefaultProperty(Default: "")]
        public long? CongestionRecoveryScalingFactor { get; set; }
        /// <summary>
        /// The minimum wait time (in millisec) to retransmit packet.
        /// Allowed values are 50-5000.
        /// Unit is MILLISECONDS.
        /// </summary>
        [JsonProperty(PropertyName = "min_rexmt_timeout")]
        [NSXTProperty(IsRequired: false, Description: @"The minimum wait time (in millisec) to retransmit packet.Allowed values are 50-5000.Unit is MILLISECONDS.")]
        //[System.ComponentModel.DataAnnotations.MinLength(50)]
        //[System.ComponentModel.DataAnnotations.MaxLength(5000)]
        public long? MinRexmtTimeout { get; set; }
        /// <summary>
        /// Controls whether the windows are static or supports
        /// autogrowth.
        /// Maximum that it can grow to is limited to 4MB.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "auto_window_growth")]
        [NSXTProperty(IsRequired: false, Description: @"Controls whether the windows are static or supportsautogrowth.Maximum that it can grow to is limited to 4MB.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? AutoWindowGrowth { get; set; }
        /// <summary>
        /// A new SYN is accepted from the same 4-tuple even if there
        /// is already a connection in TIME_WAIT state.
        /// This is equivalent of setting Time Wait Delay to 0.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "ignore_time_wait")]
        [NSXTProperty(IsRequired: false, Description: @"A new SYN is accepted from the same 4-tuple even if thereis already a connection in TIME_WAIT state.This is equivalent of setting Time Wait Delay to 0.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? IgnoreTimeWait { get; set; }
        /// <summary>
        /// Maximum number of TCP segments that can be queued for
        /// reassembly.
        /// Configuring this to 0 disables the feature and provides
        /// unlimited queuing.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 0.
        /// </summary>
        [JsonProperty(PropertyName = "reassembly_queue_size")]
        [NSXTProperty(IsRequired: false, Description: @"Maximum number of TCP segments that can be queued forreassembly.Configuring this to 0 disables the feature and providesunlimited queuing.Default value when not specified in API or module isinterpreted by ALB Controller as 0.")]
        [NSXTDefaultProperty(Default: "")]
        public long? ReassemblyQueueSize { get; set; }
        /// <summary>
        /// Consolidates small data packets to send clients fewer but
        /// larger packets.
        /// Adversely affects real time protocols such as telnet or
        /// SSH.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "nagles_algorithm")]
        [NSXTProperty(IsRequired: false, Description: @"Consolidates small data packets to send clients fewer butlarger packets.Adversely affects real time protocols such as telnet orSSH.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? NaglesAlgorithm { get; set; }
        /// <summary>
        /// The number of attempts at retransmit before closing the
        /// connection.
        /// Allowed values are 3-8.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 8.
        /// </summary>
        [JsonProperty(PropertyName = "max_retransmissions")]
        [NSXTProperty(IsRequired: false, Description: @"The number of attempts at retransmit before closing theconnection.Allowed values are 3-8.Default value when not specified in API or module isinterpreted by ALB Controller as 8.")]
        //[System.ComponentModel.DataAnnotations.MinLength(3)]
        //[System.ComponentModel.DataAnnotations.MaxLength(8)]
        [NSXTDefaultProperty(Default: "")]
        public long? MaxRetransmissions { get; set; }
        /// <summary>
        /// Congestion window scaling factor during slow start.
        /// Allowed values are 0-8.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 1.
        /// </summary>
        [JsonProperty(PropertyName = "slow_start_scaling_factor")]
        [NSXTProperty(IsRequired: false, Description: @"Congestion window scaling factor during slow start.Allowed values are 0-8.Default value when not specified in API or module isinterpreted by ALB Controller as 1.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(8)]
        [NSXTDefaultProperty(Default: "")]
        public long? SlowStartScalingFactor { get; set; }
        /// <summary>
        /// Dynamically pick the relevant parameters for connections.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "automatic")]
        [NSXTProperty(IsRequired: false, Description: @"Dynamically pick the relevant parameters for connections.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? Automatic { get; set; }
        /// <summary>
        /// Controls the value of the Differentiated Services Code
        /// Point field inserted in the IP header.
        /// This has two options   Set to a specific value, or Pass
        /// Through, which uses the incoming DSCP value.
        /// Allowed values are 0-63.
        /// Special values are MAX - 'Passthrough'.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 0.
        /// </summary>
        [JsonProperty(PropertyName = "ip_dscp")]
        [NSXTProperty(IsRequired: false, Description: @"Controls the value of the Differentiated Services CodePoint field inserted in the IP header.This has two options   Set to a specific value, or PassThrough, which uses the incoming DSCP value.Allowed values are 0-63.Special values are MAX - &apos;Passthrough&apos;.Default value when not specified in API or module isinterpreted by ALB Controller as 0.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(63)]
        [NSXTDefaultProperty(Default: "")]
        public long? IpDscp { get; set; }
        /// <summary>
        /// Use the interface MTU to calculate the TCP max segment
        /// size.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "use_interface_mtu")]
        [NSXTProperty(IsRequired: false, Description: @"Use the interface MTU to calculate the TCP max segmentsize.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? UseInterfaceMtu { get; set; }
    }
}
