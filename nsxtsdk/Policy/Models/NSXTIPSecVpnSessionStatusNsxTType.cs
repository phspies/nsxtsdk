// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using NJsonSchema.Converters;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTIPSecVpnSessionStatusNsxTType : NSXTIPSecVpnSessionStatusPerEPType
    {
        /// <summary>
        /// Gives session status consolidated using IKE status and tunnel status. It can
        /// be UP, DOWN, DEGRADED. If IKE and all tunnels are UP status will be UP, if
        /// all down it will be DOWN, otherwise it will be DEGRADED.
        /// </summary>
        public NSXTIpsecVpnSessionStatusNsxTRuntimeStatusEnumType? RuntimeStatus { get; set; }
        /// <summary>
        /// Display Name of vpn session.
        /// </summary>
        public string? DisplayName { get; set; }
        /// <summary>
        /// Number of failed tunnels.
        /// </summary>
        public long? FailedTunnels { get; set; }
        /// <summary>
        /// Number of negotiated tunnels.
        /// </summary>
        public long? NegotiatedTunnels { get; set; }
        /// <summary>
        /// Timestamp when the data was last updated.
        /// </summary>
        public long? LastUpdateTimestamp { get; set; }
        /// <summary>
        /// Total number of tunnels.
        /// </summary>
        public long? TotalTunnels { get; set; }
        /// <summary>
        /// 
        /// </summary>
        public NSXTIPSecVpnIkeSessionStatusType IkeStatus { get; set; }
        /// <summary>
        /// 
        /// </summary>
        public NSXTIPSecVpnTrafficCountersType AggregateTrafficCounters { get; set; }
    }
}
