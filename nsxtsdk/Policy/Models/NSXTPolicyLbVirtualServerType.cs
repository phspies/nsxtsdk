// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [JsonConverter(typeof(JsonInheritanceConverter), "resource_type")]
    [JsonInheritanceAttribute("HttpPolicyLbVirtualServer", typeof(NSXTHttpPolicyLbVirtualServerType))]
    [JsonInheritanceAttribute("TcpPolicyLbVirtualServer", typeof(NSXTTcpPolicyLbVirtualServerType))]
    [JsonInheritanceAttribute("UdpPolicyLbVirtualServer", typeof(NSXTUdpPolicyLbVirtualServerType))]
    [NSXTProperty(Description: @"")]
    public class NSXTPolicyLbVirtualServerType : NSXTPolicyConfigResourceType
    {
        /// <summary>
        /// If access log is enabled, all HTTP requests sent to an L7 virtual
        /// server are logged to the access log file. Both successful requests
        /// (backend server returns 2xx) and unsuccessful requests (backend
        /// server returns 4xx or 5xx) are logged to access log, if enabled.
        /// </summary>
        [JsonProperty(PropertyName = "access_log_enabled")]
        [NSXTProperty(IsRequired: false, Description: @"If access log is enabled, all HTTP requests sent to an L7 virtualserver are logged to the access log file. Both successful requests(backend server returns 2xx) and unsuccessful requests (backendserver returns 4xx or 5xx) are logged to access log, if enabled.")]
        public bool? AccessLogEnabled { get; set; }
        /// <summary>
        /// Path to router type object that PolicyLbVirtualServer connects to.
        /// The only supported router object is Network.
        /// </summary>
        [JsonProperty(PropertyName = "router_path", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Path to router type object that PolicyLbVirtualServer connects to.The only supported router object is Network.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string RouterPath { get; set; }
        /// <summary>
        /// Path to optional object that enables persistence on a virtual server
        /// allowing related client connections to be sent to the same backend
        /// server. Persistence is disabled by default.
        /// </summary>
        [JsonProperty(PropertyName = "lb_persistence_profile")]
        [NSXTProperty(IsRequired: false, Description: @"Path to optional object that enables persistence on a virtual serverallowing related client connections to be sent to the same backendserver. Persistence is disabled by default.")]
        public string? LbPersistenceProfile { get; set; }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "traffic_source")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public string? TrafficSource { get; set; }
        /// <summary>
        /// Configures the IP address of the PolicyLbVirtualServer where it
        /// receives all client connections and distributes them among the
        /// backend servers.
        /// </summary>
        [JsonProperty(PropertyName = "ip_address", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Configures the IP address of the PolicyLbVirtualServer where itreceives all client connections and distributes them among thebackend servers.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string IpAddress { get; set; }
        /// <summary>
        /// Ports contains a list of at least one port or port range such as "80",
        /// "1234-1236". Each port element in the list should be a single port or a
        /// single port range.
        /// </summary>
        [JsonProperty(PropertyName = "ports", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Ports contains a list of at least one port or port range such as &quot;80&quot;,&quot;1234-1236&quot;. Each port element in the list should be a single port or asingle port range.")]
        [System.ComponentModel.DataAnnotations.Required]
        public IList<string> Ports { get; set; }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "resource_type", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTPolicyLbVirtualServerResourceTypeEnumType ResourceType { get; set; }
    }
}
