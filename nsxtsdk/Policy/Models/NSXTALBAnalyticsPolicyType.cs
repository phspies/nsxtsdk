// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Advanced load balancer AnalyticsPolicy object
    /// </summary>
    [NSXTProperty(Description: @"Advanced load balancer AnalyticsPolicy object")]
    public class NSXTALBAnalyticsPolicyType 
    {
        /// <summary>
        /// Placeholder for description of property client_log_filters
        /// of obj type AnalyticsPolicy field type str  type array.
        /// </summary>
        [JsonProperty(PropertyName = "client_log_filters")]
        [NSXTProperty(IsRequired: false, Description: @"Placeholder for description of property client_log_filtersof obj type AnalyticsPolicy field type str  type array.")]
        public IList<NSXTALBClientLogFilterType> ClientLogFilters { get; set; }
        /// <summary>
        /// This setting limits the total number of UDF logs generated
        /// per second for this VS on each SE.
        /// UDF logs are generated due to the configured client log
        /// filters or the rules with logging enabled.
        /// Default is 10 logs per second.
        /// Set it to zero (0) to deactivate throttling.
        /// Unit is PER_SECOND.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 10.
        /// </summary>
        [JsonProperty(PropertyName = "udf_log_throttle")]
        [NSXTProperty(IsRequired: false, Description: @"This setting limits the total number of UDF logs generatedper second for this VS on each SE.UDF logs are generated due to the configured client logfilters or the rules with logging enabled.Default is 10 logs per second.Set it to zero (0) to deactivate throttling.Unit is PER_SECOND.Default value when not specified in API or module isinterpreted by ALB Controller as 10.")]
        [NSXTDefaultProperty(Default: "")]
        public long? UdfLogThrottle { get; set; }
        /// <summary>
        /// Settings to turn on realtime metrics and set duration for
        /// realtime updates.
        /// </summary>
        [JsonProperty(PropertyName = "metrics_realtime_update")]
        [NSXTProperty(IsRequired: false, Description: @"Settings to turn on realtime metrics and set duration forrealtime updates.")]
        public NSXTALBMetricsRealTimeUpdateType MetricsRealtimeUpdate { get; set; }
        /// <summary>
        /// This setting limits the number of significant logs
        /// generated per second for this VS on each SE.
        /// Default is 10 logs per second.
        /// Set it to zero (0) to deactivate throttling.
        /// Unit is PER_SECOND.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 10.
        /// </summary>
        [JsonProperty(PropertyName = "significant_log_throttle")]
        [NSXTProperty(IsRequired: false, Description: @"This setting limits the number of significant logsgenerated per second for this VS on each SE.Default is 10 logs per second.Set it to zero (0) to deactivate throttling.Unit is PER_SECOND.Default value when not specified in API or module isinterpreted by ALB Controller as 10.")]
        [NSXTDefaultProperty(Default: "")]
        public long? SignificantLogThrottle { get; set; }
        /// <summary>
        /// Gain insights from sampled client to server HTTP requests
        /// and responses.
        /// Enum options - NO_INSIGHTS, PASSIVE, ACTIVE.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as NO_INSIGHTS.
        /// </summary>
        [JsonProperty(PropertyName = "client_insights")]
        [NSXTProperty(IsRequired: false, Description: @"Gain insights from sampled client to server HTTP requestsand responses.Enum options - NO_INSIGHTS, PASSIVE, ACTIVE.Default value when not specified in API or module isinterpreted by ALB Controller as NO_INSIGHTS.")]
        [NSXTDefaultProperty(Default: "NO_INSIGHTS")]
        public NSXTAlbanalyticsPolicyClientInsightsEnumType? ClientInsights { get; set; }
        /// <summary>
        /// Log all headers.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "all_headers")]
        [NSXTProperty(IsRequired: false, Description: @"Log all headers.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? AllHeaders { get; set; }
        /// <summary>
        /// Placeholder for description of property
        /// client_insights_sampling of obj type AnalyticsPolicy field
        /// type str  type ref.
        /// </summary>
        [JsonProperty(PropertyName = "client_insights_sampling")]
        [NSXTProperty(IsRequired: false, Description: @"Placeholder for description of propertyclient_insights_sampling of obj type AnalyticsPolicy fieldtype str  type ref.")]
        public NSXTALBClientInsightsSamplingType ClientInsightsSampling { get; set; }
        /// <summary>
        /// Placeholder for description of property full_client_logs of
        /// obj type AnalyticsPolicy field type str  type ref.
        /// </summary>
        [JsonProperty(PropertyName = "full_client_logs")]
        [NSXTProperty(IsRequired: false, Description: @"Placeholder for description of property full_client_logs ofobj type AnalyticsPolicy field type str  type ref.")]
        public NSXTALBFullClientLogsType FullClientLogs { get; set; }
    }
}
