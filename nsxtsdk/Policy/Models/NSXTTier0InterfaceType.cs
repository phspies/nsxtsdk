// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTTier0InterfaceType : NSXTBaseTier0InterfaceType
    {
        /// <summary>
        /// OSPF configuration.
        /// </summary>
        [JsonProperty(PropertyName = "ospf")]
        [NSXTProperty(IsRequired: false, Description: @"OSPF configuration.")]
        public NSXTPolicyInterfaceOspfConfigType Ospf { get; set; }
        /// <summary>
        /// Specify association of interface with edge cluster member.
        /// This property is deprecated, use edge_path instead. When both
        /// properties are specifed, only edge_path property is used.
        /// </summary>
        [JsonProperty(PropertyName = "edge_cluster_member_index")]
        [NSXTProperty(IsRequired: false, Description: @"Specify association of interface with edge cluster member.This property is deprecated, use edge_path instead. When bothproperties are specifed, only edge_path property is used.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        public long? EdgeClusterMemberIndex { get; set; }
        /// <summary>
        /// Unicast Reverse Path Forwarding mode
        /// </summary>
        [JsonProperty(PropertyName = "urpf_mode")]
        [NSXTProperty(IsRequired: false, Description: @"Unicast Reverse Path Forwarding mode")]
        [NSXTDefaultProperty(Default: "STRICT")]
        public NSXTTier0InterfaceUrpfModeEnumType? UrpfMode { get; set; }
        /// <summary>
        /// Array of prefix lists used to specify filtering for ARP proxy.
        /// Prefixes in this array are used to configure ARP proxy entries on Tier-0
        /// gateway (for uplinks).
        /// </summary>
        [JsonProperty(PropertyName = "proxy_arp_filters")]
        [NSXTProperty(IsRequired: false, Description: @"Array of prefix lists used to specify filtering for ARP proxy.Prefixes in this array are used to configure ARP proxy entries on Tier-0gateway (for uplinks).")]
        public IList<string> ProxyArpFilters { get; set; }
        /// <summary>
        /// Policy path to edge node to handle external connectivity.
        /// Required when interface type is EXTERNAL.
        /// </summary>
        [JsonProperty(PropertyName = "edge_path")]
        [NSXTProperty(IsRequired: false, Description: @"Policy path to edge node to handle external connectivity.Required when interface type is EXTERNAL.")]
        public string? EdgePath { get; set; }
        /// <summary>
        /// Specify Segment to which this interface is connected to.
        /// Either segment_path or ls_id property is required.
        /// </summary>
        [JsonProperty(PropertyName = "segment_path")]
        [NSXTProperty(IsRequired: false, Description: @"Specify Segment to which this interface is connected to.Either segment_path or ls_id property is required.")]
        public string? SegmentPath { get; set; }
        /// <summary>
        /// Multicast PIM configuration.
        /// </summary>
        [JsonProperty(PropertyName = "multicast")]
        [NSXTProperty(IsRequired: false, Description: @"Multicast PIM configuration.")]
        public NSXTTier0InterfacePimConfigType Multicast { get; set; }
        /// <summary>
        /// Specify logical switch to which tier-0 interface is connected for
        /// external access.
        /// This property is deprecated, use segment_path instead. Both
        /// properties cannot be used together.
        /// </summary>
        [JsonProperty(PropertyName = "ls_id")]
        [NSXTProperty(IsRequired: false, Description: @"Specify logical switch to which tier-0 interface is connected forexternal access.This property is deprecated, use segment_path instead. Bothproperties cannot be used together.")]
        public string? LsId { get; set; }
        /// <summary>
        /// Configuration IPv6 NDRA profile. Only one
        /// NDRA profile can be configured.
        /// </summary>
        [JsonProperty(PropertyName = "ipv6_profile_paths")]
        [NSXTProperty(IsRequired: false, Description: @"Configuration IPv6 NDRA profile. Only oneNDRA profile can be configured.")]
        public IList<string> Ipv6ProfilePaths { get; set; }
        /// <summary>
        /// IGMP local join groups configuration.
        /// </summary>
        [JsonProperty(PropertyName = "igmp_local_join_groups")]
        [NSXTProperty(IsRequired: false, Description: @"IGMP local join groups configuration.")]
        public IList<string> IgmpLocalJoinGroups { get; set; }
        /// <summary>
        /// Vlan id.
        /// </summary>
        [JsonProperty(PropertyName = "access_vlan_id")]
        [NSXTProperty(IsRequired: false, Description: @"Vlan id.")]
        public long? AccessVlanId { get; set; }
        /// <summary>
        /// Maximum transmission unit (MTU) specifies the size of the largest
        /// packet that a network protocol can transmit.
        /// </summary>
        [JsonProperty(PropertyName = "mtu")]
        [NSXTProperty(IsRequired: false, Description: @"Maximum transmission unit (MTU) specifies the size of the largestpacket that a network protocol can transmit.")]
        //[System.ComponentModel.DataAnnotations.MinLength(64)]
        public long? Mtu { get; set; }
        /// <summary>
        /// Interface type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        [NSXTProperty(IsRequired: false, Description: @"Interface type")]
        [NSXTDefaultProperty(Default: "EXTERNAL")]
        public NSXTTier0InterfaceTypeEnumType? Type { get; set; }
    }
}
