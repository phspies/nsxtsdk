// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTUnaryOperationBasedInjectionValueType : NSXTInjectionValueType
    {
        /// <summary>
        /// Represents an optional operation to be done on the initial value.
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        [NSXTProperty(IsRequired: false, Description: @"Represents an optional operation to be done on the initial value.")]
        public NSXTUnaryOperationType Operation { get; set; }
        /// <summary>
        /// Resource field pointer representing the initial value for the injection value. If an
        /// operation is supplied, the value is handed to the operation function to produce a
        /// final result.
        /// </summary>
        [JsonProperty(PropertyName = "initial_value", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Resource field pointer representing the initial value for the injection value. If anoperation is supplied, the value is handed to the operation function to produce afinal result.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTResourceFieldPointerType InitialValue { get; set; }
    }
}
