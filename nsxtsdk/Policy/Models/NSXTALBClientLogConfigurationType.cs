// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Advanced load balancer ClientLogConfiguration object
    /// </summary>
    [NSXTProperty(Description: @"Advanced load balancer ClientLogConfiguration object")]
    public class NSXTALBClientLogConfigurationType 
    {
        /// <summary>
        /// Enable significant log collection.
        /// By default, this flag is enabled, which means that Avi SEs
        /// collect significant logs and forward them to Controller for
        /// further processing.
        /// For example, these logs correspond to error conditions such
        /// as when the response code for a request is 500.
        /// Users can deactivate this flag to turn off default
        /// significant log collection.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "enable_significant_log_collection")]
        [NSXTProperty(IsRequired: false, Description: @"Enable significant log collection.By default, this flag is enabled, which means that Avi SEscollect significant logs and forward them to Controller forfurther processing.For example, these logs correspond to error conditions suchas when the response code for a request is 500.Users can deactivate this flag to turn off defaultsignificant log collection.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? EnableSignificantLogCollection { get; set; }
        /// <summary>
        /// Significant logs are processed by the Logs Analytics system
        /// according to this setting.
        /// Enum options - LOGS_PROCESSING_NONE,
        /// LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND,
        /// LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,
        /// LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as
        /// LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND.
        /// </summary>
        [JsonProperty(PropertyName = "significant_log_processing")]
        [NSXTProperty(IsRequired: false, Description: @"Significant logs are processed by the Logs Analytics systemaccording to this setting.Enum options - LOGS_PROCESSING_NONE,LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND,LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.Default value when not specified in API or module isinterpreted by ALB Controller asLOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND.")]
        [NSXTDefaultProperty(Default: "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND")]
        public NSXTAlbclientLogConfigurationSignificantLogProcessingEnumType? SignificantLogProcessing { get; set; }
        /// <summary>
        /// Logs that are neither significant nor filtered, are
        /// processed by the Logs Analytics system according to this
        /// setting.
        /// Enum options - LOGS_PROCESSING_NONE,
        /// LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND,
        /// LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,
        /// LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as
        /// LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND.
        /// </summary>
        [JsonProperty(PropertyName = "non_significant_log_processing")]
        [NSXTProperty(IsRequired: false, Description: @"Logs that are neither significant nor filtered, areprocessed by the Logs Analytics system according to thissetting.Enum options - LOGS_PROCESSING_NONE,LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND,LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.Default value when not specified in API or module isinterpreted by ALB Controller asLOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND.")]
        [NSXTDefaultProperty(Default: "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND")]
        public NSXTAlbclientLogConfigurationNonSignificantLogProcessingEnumType? NonSignificantLogProcessing { get; set; }
        /// <summary>
        /// Filtered logs are logs that match any client log filters or
        /// rules with logging enabled.
        /// Such logs are processed by the Logs Analytics system
        /// according to this setting.
        /// Enum options - LOGS_PROCESSING_NONE,
        /// LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND,
        /// LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,
        /// LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as
        /// LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND.
        /// </summary>
        [JsonProperty(PropertyName = "filtered_log_processing")]
        [NSXTProperty(IsRequired: false, Description: @"Filtered logs are logs that match any client log filters orrules with logging enabled.Such logs are processed by the Logs Analytics systemaccording to this setting.Enum options - LOGS_PROCESSING_NONE,LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND,LOGS_PROCESSING_AUTO_SYNC_AND_INDEX,LOGS_PROCESSING_AUTO_SYNC_BUT_INDEX_ON_DEMAND.Default value when not specified in API or module isinterpreted by ALB Controller asLOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND.")]
        [NSXTDefaultProperty(Default: "LOGS_PROCESSING_SYNC_AND_INDEX_ON_DEMAND")]
        public NSXTAlbclientLogConfigurationFilteredLogProcessingEnumType? FilteredLogProcessing { get; set; }
    }
}
