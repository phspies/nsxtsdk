// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Advanced load balancer Vip object
    /// </summary>
    [NSXTProperty(Description: @"Advanced load balancer Vip object")]
    public class NSXTALBVipType 
    {
        /// <summary>
        /// Auto-allocate VIP from the provided subnet.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "auto_allocate_ip")]
        [NSXTProperty(IsRequired: false, Description: @"Auto-allocate VIP from the provided subnet.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? AutoAllocateIp { get; set; }
        /// <summary>
        /// (internal-use) Network port assigned to the Vip IP address.
        /// </summary>
        [JsonProperty(PropertyName = "port_uuid")]
        [NSXTProperty(IsRequired: false, Description: @"(internal-use) Network port assigned to the Vip IP address.")]
        public string? PortUuid { get; set; }
        /// <summary>
        /// Availability-zone to place the Virtual Service.
        /// </summary>
        [JsonProperty(PropertyName = "availability_zone")]
        [NSXTProperty(IsRequired: false, Description: @"Availability-zone to place the Virtual Service.")]
        public string? AvailabilityZone { get; set; }
        /// <summary>
        /// Manually override the network on which the Vip is placed.
        /// It is a reference to an object of type Network.
        /// </summary>
        [JsonProperty(PropertyName = "network_path")]
        [NSXTProperty(IsRequired: false, Description: @"Manually override the network on which the Vip is placed.It is a reference to an object of type Network.")]
        public string? NetworkPath { get; set; }
        /// <summary>
        /// Floating IPv4 to associate with this Vip.
        /// </summary>
        [JsonProperty(PropertyName = "floating_ip")]
        [NSXTProperty(IsRequired: false, Description: @"Floating IPv4 to associate with this Vip.")]
        public NSXTALBIpAddrType FloatingIp { get; set; }
        /// <summary>
        /// Auto-allocate floating/elastic IP from the Cloud
        /// infrastructure.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "auto_allocate_floating_ip")]
        [NSXTProperty(IsRequired: false, Description: @"Auto-allocate floating/elastic IP from the Cloudinfrastructure.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? AutoAllocateFloatingIp { get; set; }
        /// <summary>
        /// If auto_allocate_floating_ip is True and more than one
        /// floating-ip subnets exist, then the subnet for the floating
        /// IP address allocation.
        /// </summary>
        [JsonProperty(PropertyName = "floating_subnet_uuid")]
        [NSXTProperty(IsRequired: false, Description: @"If auto_allocate_floating_ip is True and more than onefloating-ip subnets exist, then the subnet for the floatingIP address allocation.")]
        public string? FloatingSubnetUuid { get; set; }
        /// <summary>
        /// IPv6 Address of the Vip.
        /// </summary>
        [JsonProperty(PropertyName = "ip6_address")]
        [NSXTProperty(IsRequired: false, Description: @"IPv6 Address of the Vip.")]
        public NSXTALBIpAddrType Ip6Address { get; set; }
        /// <summary>
        /// (internal-use) VIP allocated by Avi in the Cloud
        /// infrastructure.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "avi_allocated_vip")]
        [NSXTProperty(IsRequired: false, Description: @"(internal-use) VIP allocated by Avi in the Cloudinfrastructure.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? AviAllocatedVip { get; set; }
        /// <summary>
        /// Specifies whether to auto-allocate only a V4 address, only
        /// a V6 address, or one of each type.
        /// Enum options - V4_ONLY, V6_ONLY, V4_V6.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as V4_ONLY.
        /// </summary>
        [JsonProperty(PropertyName = "auto_allocate_ip_type")]
        [NSXTProperty(IsRequired: false, Description: @"Specifies whether to auto-allocate only a V4 address, onlya V6 address, or one of each type.Enum options - V4_ONLY, V6_ONLY, V4_V6.Default value when not specified in API or module isinterpreted by ALB Controller as V4_ONLY.")]
        [NSXTDefaultProperty(Default: "V4_ONLY")]
        public NSXTAlbvipAutoAllocateIpTypeEnumType? AutoAllocateIpType { get; set; }
        /// <summary>
        /// IPv4 Address of the VIP.
        /// </summary>
        [JsonProperty(PropertyName = "ip_address")]
        [NSXTProperty(IsRequired: false, Description: @"IPv4 Address of the VIP.")]
        public NSXTALBIpAddrType IpAddress { get; set; }
        /// <summary>
        /// If auto_allocate_ip is True, then the subnet for the Vip IP
        /// address allocation.
        /// This field is applicable only if the VirtualService belongs
        /// to an Openstack or AWS cloud, in which case it is mandatory,
        /// if auto_allocate is selected.
        /// </summary>
        [JsonProperty(PropertyName = "subnet_uuid")]
        [NSXTProperty(IsRequired: false, Description: @"If auto_allocate_ip is True, then the subnet for the Vip IPaddress allocation.This field is applicable only if the VirtualService belongsto an Openstack or AWS cloud, in which case it is mandatory,if auto_allocate is selected.")]
        public string? SubnetUuid { get; set; }
        /// <summary>
        /// If auto_allocate_floating_ip is True and more than one
        /// floating-ip subnets exist, then the subnet for the floating
        /// IPv6 address allocation.
        /// </summary>
        [JsonProperty(PropertyName = "floating_subnet6_uuid")]
        [NSXTProperty(IsRequired: false, Description: @"If auto_allocate_floating_ip is True and more than onefloating-ip subnets exist, then the subnet for the floatingIPv6 address allocation.")]
        public string? FloatingSubnet6Uuid { get; set; }
        /// <summary>
        /// Subnet providing reachability for client facing Vip IP.
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        [NSXTProperty(IsRequired: false, Description: @"Subnet providing reachability for client facing Vip IP.")]
        public NSXTALBIpAddrPrefixType Subnet { get; set; }
        /// <summary>
        /// If auto_allocate_ip is True, then the subnet for the Vip
        /// IPv6 address allocation.
        /// This field is applicable only if the VirtualService belongs
        /// to an Openstack or AWS cloud, in which case it is mandatory,
        /// if auto_allocate is selected.
        /// </summary>
        [JsonProperty(PropertyName = "subnet6_uuid")]
        [NSXTProperty(IsRequired: false, Description: @"If auto_allocate_ip is True, then the subnet for the VipIPv6 address allocation.This field is applicable only if the VirtualService belongsto an Openstack or AWS cloud, in which case it is mandatory,if auto_allocate is selected.")]
        public string? Subnet6Uuid { get; set; }
        /// <summary>
        /// Unique ID associated with the vip.
        /// </summary>
        [JsonProperty(PropertyName = "vip_id", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Unique ID associated with the vip.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string VipId { get; set; }
        /// <summary>
        /// Floating IPv6 address to associate with this Vip.
        /// </summary>
        [JsonProperty(PropertyName = "floating_ip6")]
        [NSXTProperty(IsRequired: false, Description: @"Floating IPv6 address to associate with this Vip.")]
        public NSXTALBIpAddrType FloatingIp6 { get; set; }
        /// <summary>
        /// (internal-use) FIP allocated by Avi in the Cloud
        /// infrastructure.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as false.
        /// </summary>
        [JsonProperty(PropertyName = "avi_allocated_fip")]
        [NSXTProperty(IsRequired: false, Description: @"(internal-use) FIP allocated by Avi in the Cloudinfrastructure.Default value when not specified in API or module isinterpreted by ALB Controller as false.")]
        public bool? AviAllocatedFip { get; set; }
        /// <summary>
        /// Discovered networks providing reachability for client
        /// facing Vip IP.
        /// </summary>
        [JsonProperty(PropertyName = "discovered_networks")]
        [NSXTProperty(IsRequired: false, Description: @"Discovered networks providing reachability for clientfacing Vip IP.")]
        public IList<NSXTALBDiscoveredNetworkType> DiscoveredNetworks { get; set; }
        /// <summary>
        /// Enable or disable the Vip.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as true.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        [NSXTProperty(IsRequired: false, Description: @"Enable or disable the Vip.Default value when not specified in API or module isinterpreted by ALB Controller as true.")]
        [NSXTDefaultProperty(Default: "")]
        public bool? Enabled { get; set; }
        /// <summary>
        /// Subnet and/or Network for allocating VirtualService IP by
        /// IPAM Provider module.
        /// </summary>
        [JsonProperty(PropertyName = "ipam_network_subnet")]
        [NSXTProperty(IsRequired: false, Description: @"Subnet and/or Network for allocating VirtualService IP byIPAM Provider module.")]
        public NSXTALBIPNetworkSubnetType IpamNetworkSubnet { get; set; }
        /// <summary>
        /// Placement networks/subnets to use for vip placement.
        /// Maximum of 10 items allowed.
        /// </summary>
        [JsonProperty(PropertyName = "placement_networks")]
        [NSXTProperty(IsRequired: false, Description: @"Placement networks/subnets to use for vip placement.Maximum of 10 items allowed.")]
        public IList<NSXTALBVipPlacementNetworkType> PlacementNetworks { get; set; }
        /// <summary>
        /// Mask applied for the Vip, non-default mask supported only
        /// for wildcard Vip.
        /// Allowed values are 0-32.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as 32.
        /// </summary>
        [JsonProperty(PropertyName = "prefix_length")]
        [NSXTProperty(IsRequired: false, Description: @"Mask applied for the Vip, non-default mask supported onlyfor wildcard Vip.Allowed values are 0-32.Default value when not specified in API or module isinterpreted by ALB Controller as 32.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(32)]
        [NSXTDefaultProperty(Default: "")]
        public long? PrefixLength { get; set; }
        /// <summary>
        /// Subnet providing reachability for client facing Vip IPv6.
        /// </summary>
        [JsonProperty(PropertyName = "subnet6")]
        [NSXTProperty(IsRequired: false, Description: @"Subnet providing reachability for client facing Vip IPv6.")]
        public NSXTALBIpAddrPrefixType Subnet6 { get; set; }
    }
}
