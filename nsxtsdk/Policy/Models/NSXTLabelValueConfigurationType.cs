// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTLabelValueConfigurationType : NSXTWidgetConfigurationType
    {
        public NSXTLabelValueConfigurationType()
        {
        }
        /// <summary>
        /// 
        /// </summary>
        [JsonProperty(PropertyName = "layout")]
        [NSXTProperty(IsRequired: false, Description: @"")]
        public NSXTLayoutType Layout { get; set; }
        /// <summary>
        /// Hyperlink of the specified UI page that provides details.
        /// </summary>
        [JsonProperty(PropertyName = "navigation")]
        [NSXTProperty(IsRequired: false, Description: @"Hyperlink of the specified UI page that provides details.")]
        public string? Navigation { get; set; }
        /// <summary>
        /// A sub-type of LabelValueConfiguration. If sub-type is not specified the parent type is rendered. For VERTICALLY_ALIGNED
        /// sub_type, the value is placed below the label. For HORIZONTALLY_ALIGNED sub_type, the value is placed right hand side of
        /// the label.
        /// </summary>
        [JsonProperty(PropertyName = "sub_type")]
        [NSXTProperty(IsRequired: false, Description: @"A sub-type of LabelValueConfiguration. If sub-type is not specified the parent type is rendered. For VERTICALLY_ALIGNED sub_type, the value is placed below the label. For HORIZONTALLY_ALIGNED sub_type, the value is placed right hand side of the label.")]
        public NSXTLabelValueConfigurationSubTypeEnumType? SubType { get; set; }
        /// <summary>
        /// An array of label-value properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"An array of label-value properties.")]
        [System.ComponentModel.DataAnnotations.Required]
        public IList<NSXTPropertyItemType> Properties { get; set; }
    }
}
