// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Advanced load balancer SSLVersion object
    /// </summary>
    [NSXTProperty(Description: @"Advanced load balancer SSLVersion object")]
    public class NSXTALBSSLVersionType 
    {
        public NSXTALBSSLVersionType()
        {
            Type = test
        }
        /// <summary>
        /// Enum options - SSL_VERSION_SSLV3, SSL_VERSION_TLS1,
        /// SSL_VERSION_TLS1_1, SSL_VERSION_TLS1_2, SSL_VERSION_TLS1_3.
        /// Allowed in Basic(Allowed values-
        /// SSL_VERSION_SSLV3,SSL_VERSION_TLS1,SSL_VERSION_TLS1_1,SSL_VERSION_TLS1_2)
        /// edition, Essentials(Allowed values-
        /// SSL_VERSION_SSLV3,SSL_VERSION_TLS1,SSL_VERSION_TLS1_1,SSL_VERSION_TLS1_2)
        /// edition, Enterprise edition.
        /// Default value when not specified in API or module is
        /// interpreted by ALB Controller as SSL_VERSION_TLS1_1.
        /// </summary>
        [JsonProperty(PropertyName = "type", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Enum options - SSL_VERSION_SSLV3, SSL_VERSION_TLS1,SSL_VERSION_TLS1_1, SSL_VERSION_TLS1_2, SSL_VERSION_TLS1_3.Allowed in Basic(Allowed values-SSL_VERSION_SSLV3,SSL_VERSION_TLS1,SSL_VERSION_TLS1_1,SSL_VERSION_TLS1_2)edition, Essentials(Allowed values-SSL_VERSION_SSLV3,SSL_VERSION_TLS1,SSL_VERSION_TLS1_1,SSL_VERSION_TLS1_2)edition, Enterprise edition.Default value when not specified in API or module isinterpreted by ALB Controller as SSL_VERSION_TLS1_1.")]
        [System.ComponentModel.DataAnnotations.Required]
        public NSXTAlbsslversionTypeEnumType Type { get; set; }
    }
}
