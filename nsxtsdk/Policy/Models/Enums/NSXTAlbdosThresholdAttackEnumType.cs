// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using System.Runtime.Serialization;
using nsxtsdk.Models;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Attack type.Enum options - LAND, SMURF, ICMP_PING_FLOOD,UNKOWN_PROTOCOL, TEARDROP, IP_FRAG_OVERRUN,IP_FRAG_TOOSMALL, IP_FRAG_FULL, IP_FRAG_INCOMPLETE,PORT_SCAN, TCP_NON_SYN_FLOOD_OLD, SYN_FLOOD, BAD_RST_FLOOD,MALFORMED_FLOOD, FAKE_SESSION, ZERO_WINDOW_STRESS,SMALL_WINDOW_STRESS, DOS_HTTP_TIMEOUT, DOS_HTTP_ERROR,DOS_HTTP_ABORT...
    /// </summary>
    [NSXTProperty(Description: @"Attack type.Enum options - LAND, SMURF, ICMP_PING_FLOOD,UNKOWN_PROTOCOL, TEARDROP, IP_FRAG_OVERRUN,IP_FRAG_TOOSMALL, IP_FRAG_FULL, IP_FRAG_INCOMPLETE,PORT_SCAN, TCP_NON_SYN_FLOOD_OLD, SYN_FLOOD, BAD_RST_FLOOD,MALFORMED_FLOOD, FAKE_SESSION, ZERO_WINDOW_STRESS,SMALL_WINDOW_STRESS, DOS_HTTP_TIMEOUT, DOS_HTTP_ERROR,DOS_HTTP_ABORT...")]
    public enum NSXTAlbdosThresholdAttackEnumType
    {
        [EnumMember(Value = "LAND")]
        LAND = 1,
        [EnumMember(Value = "SMURF")]
        SMURF = 2,
        [EnumMember(Value = "ICMP_PING_FLOOD")]
        ICMPPINGFLOOD = 3,
        [EnumMember(Value = "UNKOWN_PROTOCOL")]
        UNKOWNPROTOCOL = 4,
        [EnumMember(Value = "TEARDROP")]
        TEARDROP = 5,
        [EnumMember(Value = "IP_FRAG_OVERRUN")]
        IPFRAGOVERRUN = 6,
        [EnumMember(Value = "IP_FRAG_TOOSMALL")]
        IPFRAGTOOSMALL = 7,
        [EnumMember(Value = "IP_FRAG_FULL")]
        IPFRAGFULL = 8,
        [EnumMember(Value = "IP_FRAG_INCOMPLETE")]
        IPFRAGINCOMPLETE = 9,
        [EnumMember(Value = "PORT_SCAN")]
        PORTSCAN = 10,
        [EnumMember(Value = "TCP_NON_SYN_FLOOD_OLD")]
        TCPNONSYNFLOODOLD = 11,
        [EnumMember(Value = "SYN_FLOOD")]
        SYNFLOOD = 12,
        [EnumMember(Value = "BAD_RST_FLOOD")]
        BADRSTFLOOD = 13,
        [EnumMember(Value = "MALFORMED_FLOOD")]
        MALFORMEDFLOOD = 14,
        [EnumMember(Value = "FAKE_SESSION")]
        FAKESESSION = 15,
        [EnumMember(Value = "ZERO_WINDOW_STRESS")]
        ZEROWINDOWSTRESS = 16,
        [EnumMember(Value = "SMALL_WINDOW_STRESS")]
        SMALLWINDOWSTRESS = 17,
        [EnumMember(Value = "DOS_HTTP_TIMEOUT")]
        DOSHTTPTIMEOUT = 18,
        [EnumMember(Value = "DOS_HTTP_ERROR")]
        DOSHTTPERROR = 19,
        [EnumMember(Value = "DOS_HTTP_ABORT")]
        DOSHTTPABORT = 20,
        [EnumMember(Value = "DOS_SSL_ERROR")]
        DOSSSLERROR = 21,
        [EnumMember(Value = "DOS_APP_ERROR")]
        DOSAPPERROR = 22,
        [EnumMember(Value = "DOS_REQ_IP_RL_DROP")]
        DOSREQIPRLDROP = 23,
        [EnumMember(Value = "DOS_REQ_URI_RL_DROP")]
        DOSREQURIRLDROP = 24,
        [EnumMember(Value = "DOS_REQ_URI_SCAN_BAD_RL_DROP")]
        DOSREQURISCANBADRLDROP = 25,
        [EnumMember(Value = "DOS_REQ_URI_SCAN_UNKNOWN_RL_DROP")]
        DOSREQURISCANUNKNOWNRLDROP = 26,
        [EnumMember(Value = "DOS_REQ_IP_URI_RL_DROP")]
        DOSREQIPURIRLDROP = 27,
        [EnumMember(Value = "DOS_CONN_IP_RL_DROP")]
        DOSCONNIPRLDROP = 28,
        [EnumMember(Value = "DOS_SLOW_URL")]
        DOSSLOWURL = 29,
        [EnumMember(Value = "TCP_NON_SYN_FLOOD")]
        TCPNONSYNFLOOD = 30,
        [EnumMember(Value = "DOS_REQ_CIP_SCAN_BAD_RL_DROP")]
        DOSREQCIPSCANBADRLDROP = 31,
        [EnumMember(Value = "DOS_REQ_CIP_SCAN_UNKNOWN_RL_DROP")]
        DOSREQCIPSCANUNKNOWNRLDROP = 32,
        [EnumMember(Value = "DOS_REQ_IP_RL_DROP_BAD")]
        DOSREQIPRLDROPBAD = 33,
        [EnumMember(Value = "DOS_REQ_URI_RL_DROP_BAD")]
        DOSREQURIRLDROPBAD = 34,
        [EnumMember(Value = "DOS_REQ_IP_URI_RL_DROP_BAD")]
        DOSREQIPURIRLDROPBAD = 35,
        [EnumMember(Value = "POLICY_DROPS")]
        POLICYDROPS = 36,
        [EnumMember(Value = "DOS_CONN_RL_DROP")]
        DOSCONNRLDROP = 37,
        [EnumMember(Value = "DOS_REQ_RL_DROP")]
        DOSREQRLDROP = 38,
        [EnumMember(Value = "DOS_REQ_HDR_RL_DROP")]
        DOSREQHDRRLDROP = 39,
        [EnumMember(Value = "DOS_REQ_CUSTOM_RL_DROP")]
        DOSREQCUSTOMRLDROP = 40,
        [EnumMember(Value = "DNS_ATTACK_REFLECTION")]
        DNSATTACKREFLECTION = 41,
    }
}
