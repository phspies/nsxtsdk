// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTSegmentType : NSXTPolicyConfigResourceType
    {
        /// <summary>
        /// Subnet configuration. Max 1 subnet
        /// </summary>
        [JsonProperty(PropertyName = "subnets")]
        [NSXTProperty(IsRequired: false, Description: @"Subnet configuration. Max 1 subnet")]
        public IList<NSXTSegmentSubnetType> Subnets { get; set; }
        /// <summary>
        /// Policy path to the connecting Tier-0 or Tier-1.
        /// Valid only for segments created under Infra.
        /// This field can only be used for overlay segments.
        /// VLAN backed segments cannot have connectivity path set.
        /// </summary>
        [JsonProperty(PropertyName = "connectivity_path")]
        [NSXTProperty(IsRequired: false, Description: @"Policy path to the connecting Tier-0 or Tier-1.Valid only for segments created under Infra.This field can only be used for overlay segments.VLAN backed segments cannot have connectivity path set.")]
        public string? ConnectivityPath { get; set; }
        /// <summary>
        /// This property could be used for vendor specific configuration in key value
        /// string pairs, the setting in extra_configs will be automatically inheritted
        /// by segment ports in the Segment.
        /// </summary>
        [JsonProperty(PropertyName = "extra_configs")]
        [NSXTProperty(IsRequired: false, Description: @"This property could be used for vendor specific configuration in key valuestring pairs, the setting in extra_configs will be automatically inherittedby segment ports in the Segment.")]
        public IList<NSXTSegmentExtraConfigType> ExtraConfigs { get; set; }
        /// <summary>
        /// Advanced configuration for Segment.
        /// </summary>
        [JsonProperty(PropertyName = "advanced_config")]
        [NSXTProperty(IsRequired: false, Description: @"Advanced configuration for Segment.")]
        public NSXTSegmentAdvancedConfigType AdvancedConfig { get; set; }
        /// <summary>
        /// Static address binding used for the Segment. This field is deprecated and will be removed in a future release. Please
        /// use address_bindings in SegmentPort to configure static bindings.
        /// </summary>
        [JsonProperty(PropertyName = "address_bindings")]
        [NSXTProperty(IsRequired: false, Description: @"Static address binding used for the Segment. This field is deprecated and will be removed in a future release. Please use address_bindings in SegmentPort to configure static bindings.")]
        public IList<NSXTPortAddressBindingEntryType> AddressBindings { get; set; }
        /// <summary>
        /// Additional config for federation.
        /// </summary>
        [JsonProperty(PropertyName = "federation_config")]
        [NSXTProperty(IsRequired: false, Description: @"Additional config for federation.")]
        public NSXTFederationConnectivityConfigType FederationConfig { get; set; }
        /// <summary>
        /// Policy path to the EvpnTenantConfig resource. Supported only for Route-Server Evpn Mode.
        /// Supported only for Overlay Segments. This will be populated for both Parent and Child segments
        /// participating in Evpn Route-Server Mode.
        /// </summary>
        [JsonProperty(PropertyName = "evpn_tenant_config_path")]
        [NSXTProperty(IsRequired: false, Description: @"Policy path to the EvpnTenantConfig resource. Supported only for Route-Server Evpn Mode.Supported only for Overlay Segments. This will be populated for both Parent and Child segmentsparticipating in Evpn Route-Server Mode.")]
        public string? EvpnTenantConfigPath { get; set; }
        /// <summary>
        /// Mac pool id that associated with a Segment.
        /// </summary>
        [JsonProperty(PropertyName = "mac_pool_id")]
        [NSXTProperty(IsRequired: false, Description: @"Mac pool id that associated with a Segment.")]
        public string? MacPoolId { get; set; }
        /// <summary>
        /// Multiple distinct L2 bridge profiles can be configured.
        /// </summary>
        [JsonProperty(PropertyName = "bridge_profiles")]
        [NSXTProperty(IsRequired: false, Description: @"Multiple distinct L2 bridge profiles can be configured.")]
        public IList<NSXTBridgeProfileConfigType> BridgeProfiles { get; set; }
        /// <summary>
        /// VLAN ids for a VLAN backed Segment.
        /// Can be a VLAN id or a range of VLAN ids specified with '-' in between.
        /// </summary>
        [JsonProperty(PropertyName = "vlan_ids")]
        [NSXTProperty(IsRequired: false, Description: @"VLAN ids for a VLAN backed Segment.Can be a VLAN id or a range of VLAN ids specified with &apos;-&apos; in between.")]
        public IList<string> VlanIds { get; set; }
        /// <summary>
        /// DNS domain name
        /// </summary>
        [JsonProperty(PropertyName = "domain_name")]
        [NSXTProperty(IsRequired: false, Description: @"DNS domain name")]
        public string? DomainName { get; set; }
        /// <summary>
        /// Used for overlay connectivity of segments. The overlay_id
        /// should be allocated from the pool as definied by enforcement-point.
        /// If not provided, it is auto-allocated from the default pool on the
        /// enforcement-point.
        /// </summary>
        [JsonProperty(PropertyName = "overlay_id")]
        [NSXTProperty(IsRequired: false, Description: @"Used for overlay connectivity of segments. The overlay_idshould be allocated from the pool as definied by enforcement-point.If not provided, it is auto-allocated from the default pool on theenforcement-point.")]
        //[System.ComponentModel.DataAnnotations.MinLength(0)]
        //[System.ComponentModel.DataAnnotations.MaxLength(2147483647)]
        public long? OverlayId { get; set; }
        /// <summary>
        /// Policy path to DHCP server or relay configuration to use for all
        /// IPv4 & IPv6 subnets configured on this segment.
        /// </summary>
        [JsonProperty(PropertyName = "dhcp_config_path")]
        [NSXTProperty(IsRequired: false, Description: @"Policy path to DHCP server or relay configuration to use for allIPv4 &amp; IPv6 subnets configured on this segment.")]
        public string? DhcpConfigPath { get; set; }
        /// <summary>
        /// This property is deprecated. The property will continue to work as
        /// expected for existing segments. The segments that are newly created
        /// with ls_id will be ignored.
        /// Sepcify pre-creted logical switch id for Segment.
        /// </summary>
        [JsonProperty(PropertyName = "ls_id")]
        [NSXTProperty(IsRequired: false, Description: @"This property is deprecated. The property will continue to work asexpected for existing segments. The segments that are newly createdwith ls_id will be ignored.Sepcify pre-creted logical switch id for Segment.")]
        public string? LsId { get; set; }
        /// <summary>
        /// Flag to indicate if the Segment is a Child-Segment of type EVPN.
        /// </summary>
        [JsonProperty(PropertyName = "evpn_segment")]
        [NSXTProperty(IsRequired: false, Description: @"Flag to indicate if the Segment is a Child-Segment of type EVPN.")]
        public bool? EvpnSegment { get; set; }
        /// <summary>
        /// Represents Desired state of the Segment
        /// </summary>
        [JsonProperty(PropertyName = "admin_state")]
        [NSXTProperty(IsRequired: false, Description: @"Represents Desired state of the Segment")]
        [NSXTDefaultProperty(Default: "UP")]
        public NSXTSegmentAdminStateEnumType? AdminState { get; set; }
        /// <summary>
        /// Policy path to metadata proxy configuration. Multiple distinct MD proxies can be configured.
        /// </summary>
        [JsonProperty(PropertyName = "metadata_proxy_paths")]
        [NSXTProperty(IsRequired: false, Description: @"Policy path to metadata proxy configuration. Multiple distinct MD proxies can be configured.")]
        public IList<string> MetadataProxyPaths { get; set; }
        /// <summary>
        /// Segment type based on configuration.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        [NSXTProperty(IsRequired: false, Description: @"Segment type based on configuration.")]
        public NSXTSegmentTypeEnumType? Type { get; set; }
        /// <summary>
        /// Configuration for extending Segment through L2 VPN
        /// </summary>
        [JsonProperty(PropertyName = "l2_extension")]
        [NSXTProperty(IsRequired: false, Description: @"Configuration for extending Segment through L2 VPN")]
        public NSXTL2ExtensionType L2Extension { get; set; }
        /// <summary>
        /// Policy path to the transport zone. Supported for VLAN backed segments
        /// as well as Overlay Segments.
        /// - This field is required for VLAN backed Segments.
        /// - For overlay Segments, it is auto assigned if only one transport zone
        /// exists in the enforcement point. Default transport zone is auto
        /// assigned for  overlay segments if none specified.
        /// </summary>
        [JsonProperty(PropertyName = "transport_zone_path")]
        [NSXTProperty(IsRequired: false, Description: @"Policy path to the transport zone. Supported for VLAN backed segmentsas well as Overlay Segments.- This field is required for VLAN backed Segments.- For overlay Segments, it is auto assigned if only one transport zone  exists in the enforcement point. Default transport zone is auto  assigned for  overlay segments if none specified.")]
        public string? TransportZonePath { get; set; }
        /// <summary>
        /// If this field is not set for overlay segment, then the default of MTEP
        /// will be used.
        /// </summary>
        [JsonProperty(PropertyName = "replication_mode")]
        [NSXTProperty(IsRequired: false, Description: @"If this field is not set for overlay segment, then the default of MTEPwill be used.")]
        [NSXTDefaultProperty(Default: "MTEP")]
        public NSXTSegmentReplicationModeEnumType? ReplicationMode { get; set; }
    }
}
