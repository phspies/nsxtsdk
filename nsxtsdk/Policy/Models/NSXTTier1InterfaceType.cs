// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// 
    /// </summary>
    [NSXTProperty(Description: @"")]
    public class NSXTTier1InterfaceType : NSXTBaseTier0InterfaceType
    {
        /// <summary>
        /// Unicast Reverse Path Forwarding mode
        /// </summary>
        [JsonProperty(PropertyName = "urpf_mode")]
        [NSXTProperty(IsRequired: false, Description: @"Unicast Reverse Path Forwarding mode")]
        [NSXTDefaultProperty(Default: "STRICT")]
        public NSXTTier1InterfaceUrpfModeEnumType? UrpfMode { get; set; }
        /// <summary>
        /// Maximum transmission unit (MTU) specifies the size of the largest
        /// packet that a network protocol can transmit.
        /// </summary>
        [JsonProperty(PropertyName = "mtu")]
        [NSXTProperty(IsRequired: false, Description: @"Maximum transmission unit (MTU) specifies the size of the largestpacket that a network protocol can transmit.")]
        //[System.ComponentModel.DataAnnotations.MinLength(64)]
        public long? Mtu { get; set; }
        /// <summary>
        /// Configrue IPv6 NDRA profile. Only one
        /// NDRA profile can be configured.
        /// </summary>
        [JsonProperty(PropertyName = "ipv6_profile_paths")]
        [NSXTProperty(IsRequired: false, Description: @"Configrue IPv6 NDRA profile. Only oneNDRA profile can be configured.")]
        public IList<string> Ipv6ProfilePaths { get; set; }
        /// <summary>
        /// Policy path of Segment to which interface is connected to.
        /// </summary>
        [JsonProperty(PropertyName = "segment_path", Required = Required.AllowNull)]
        [NSXTProperty(IsRequired: true, Description: @"Policy path of Segment to which interface is connected to.")]
        [System.ComponentModel.DataAnnotations.Required]
        public string SegmentPath { get; set; }
    }
}
