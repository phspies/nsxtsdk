// <auto-generated>
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using NJsonSchema.Converters;
using System.ComponentModel;

namespace nsxtsdk.PolicyModels
{
    /// <summary>
    /// Enable address_families and route filtering in each direction
    /// </summary>
    [NSXTProperty(Description: @"Enable address_families and route filtering in each direction")]
    public class NSXTBgpRouteFilteringType 
    {
        public NSXTBgpRouteFilteringType()
        {
            Enabled = test
        }
        /// <summary>
        /// Specify path of prefix-list or route map to filter routes for OUT direction.
        /// When not specified, a built-in prefix-list named 'prefixlist-out-default'
        /// is automatically applied.
        /// </summary>
        [JsonProperty(PropertyName = "out_route_filters")]
        [NSXTProperty(IsRequired: false, Description: @"Specify path of prefix-list or route map to filter routes for OUT direction.When not specified, a built-in prefix-list named &apos;prefixlist-out-default&apos;is automatically applied.")]
        public IList<string> OutRouteFilters { get; set; }
        /// <summary>
        /// Specify path of prefix-list or route map to filter routes for IN direction.
        /// </summary>
        [JsonProperty(PropertyName = "in_route_filters")]
        [NSXTProperty(IsRequired: false, Description: @"Specify path of prefix-list or route map to filter routes for IN direction.")]
        public IList<string> InRouteFilters { get; set; }
        /// <summary>
        /// Flag to enable address family.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        [NSXTProperty(IsRequired: false, Description: @"Flag to enable address family.")]
        public bool? Enabled { get; set; }
        /// <summary>
        /// Address family type.
        /// If not configured, this property automatically derived for IPv4 & IPv6
        /// peer configuration.
        /// </summary>
        [JsonProperty(PropertyName = "address_family")]
        [NSXTProperty(IsRequired: false, Description: @"Address family type.If not configured, this property automatically derived for IPv4 &amp; IPv6peer configuration.")]
        public NSXTBgpRouteFilteringAddressFamilyEnumType? AddressFamily { get; set; }
        /// <summary>
        /// Maximum number of routes for the address family.
        /// </summary>
        [JsonProperty(PropertyName = "maximum_routes")]
        [NSXTProperty(IsRequired: false, Description: @"Maximum number of routes for the address family.")]
        //[System.ComponentModel.DataAnnotations.MinLength(1)]
        //[System.ComponentModel.DataAnnotations.MaxLength(1000000)]
        public int? MaximumRoutes { get; set; }
    }
}
