using nsxtsdk.Models;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using NJsonSchema.Converters;
using Newtonsoft.Json.Converters;

namespace nsxtsdk.{{rootmodule}}Models
{
    /// <summary>
    /// {{ToXmlDoc def.description "wrap"}}
    /// </summary>
    {{#discriminator}}
    [JsonConverter(typeof(JsonInheritanceConverter), "{{discriminator}}")]
    {{/discriminator}}
    {{#inheritanceClasses}}
    [JsonInheritanceAttribute("{{.}}", typeof(NSXT{{.}}Type))]
    {{/inheritanceClasses}}
    [NSXTProperty(Description: @"{{ToXmlDoc def.description}}")]
    public class NSXT{{clz}}Type {{referenced}}
    {
        {{#def.Properties.Values}}
        /// <summary>
        /// {{ToXmlDoc description "wrap"}}
        /// </summary>
        {{#if isRequired}}
        [JsonProperty(PropertyName = "{{name}}", Required = Required.AllowNull)]
        {{#else}}
        [JsonProperty(PropertyName = "{{name}}")]
        {{/if}}
        {{#IsEnumeration}}
        [JsonConverter(typeof(StringEnumConverter))]
        {{/IsEnumeration}}
        public {{GetDotNetType . name clz}} {{GetDotNetName name "field"}} { get; set; }
        {{/def.Properties.Values}}
    }
}
